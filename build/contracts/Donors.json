{
  "contractName": "Donors",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "verifyDonation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "giveBack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "donationsToFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "missions",
      "outputs": [
        {
          "name": "contributorCount",
          "type": "uint256"
        },
        {
          "name": "amountDonated",
          "type": "uint256"
        },
        {
          "name": "organization",
          "type": "string"
        },
        {
          "name": "date",
          "type": "uint256"
        },
        {
          "name": "fundGoal",
          "type": "uint256"
        },
        {
          "name": "requester",
          "type": "address"
        },
        {
          "name": "orgContract",
          "type": "address"
        },
        {
          "name": "orgHead",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "getMissionAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "requestMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "missionExists",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "donorChoice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "existingMissions",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        }
      ],
      "name": "addFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "donorAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "missionAddresses",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "missionCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "donors",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "genericDonation",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        },
        {
          "name": "_orgHead",
          "type": "address"
        }
      ],
      "name": "approveRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "multipurposeBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "donorContributions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_organization",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        },
        {
          "name": "_orgHead",
          "type": "address"
        }
      ],
      "name": "createMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Request",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "DonorChoice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "debug",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "test",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "debugger",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Given",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "orgHead",
          "type": "address"
        }
      ],
      "name": "CreatedMission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        }
      ],
      "name": "AddedFundGoal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "isMissionDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getAddressToMissionDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613b43806100536000396000f3006080604052600436106200016f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b34a28f146200026e57806312065fe01462000288578063167595ee14620002b65780631a0f74fc146200032c5780631b49df6514620003ac5780632bc3d7aa146200042c5780632c8fe526146200048c57806334f5ca6a14620005ed578063356e2eec146200066d5780633b36ceae14620007195780634ce6033314620007855780634d21aabf146200080b57806353db692814620008655780635815797314620008af5780636e5c2bb214620009395780638356ed8e14620009935780638cb214711462000a3957806393ab52bf1462000aa9578063b27634551462000b49578063b5aebc801462000b77578063ca0cdea81462000bd5578063d0ef19fe1462000c35578063da5504ba1462000c41578063dcd4491b1462000cd7578063f4374aea1462000d05578063fd2202ce1462000d5f575b620001863460015462000df590919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156200027b57600080fd5b506200028662000e17565b005b3480156200029557600080fd5b50620002a062000f50565b6040518082815260200191505060405180910390f35b348015620002c357600080fd5b506200032a600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505062000f6f565b005b3480156200033957600080fd5b5062000396600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200120c565b6040518082815260200191505060405180910390f35b348015620003b957600080fd5b5062000416600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200131f565b6040518082815260200191505060405180910390f35b3480156200043957600080fd5b5062000470600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001449565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200049957600080fd5b50620004ba60048036038101908080359060200190929190505050620014b8565b60405180898152602001888152602001806020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825288818151815260200191508051906020019080838360005b83811015620005aa5780820151818401526020810190506200058d565b50505050905090810190601f168015620005d85780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b348015620005fa57600080fd5b5062000657600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620015fc565b6040518082815260200191505060405180910390f35b3480156200067a57600080fd5b50620006d7600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200170b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200072657600080fd5b5062000783600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001927565b005b3480156200079257600080fd5b50620007ef600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001cd1565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200081857600080fd5b506200084f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001dd1565b6040518082815260200191505060405180910390f35b3480156200087257600080fd5b50620008936004803603810190808035906020019092919050505062001de9565b604051808260ff1660ff16815260200191505060405180910390f35b348015620008bc57600080fd5b5062000923600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505062001e09565b6040518082815260200191505060405180910390f35b3480156200094657600080fd5b506200097d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002029565b6040518082815260200191505060405180910390f35b348015620009a057600080fd5b5062000a1d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002041565b604051808260ff1660ff16815260200191505060405180910390f35b34801562000a4657600080fd5b5062000a6760048036038101908080359060200190929190505050620021a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000ab657600080fd5b5062000b33600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620021d3565b6040518082815260200191505060405180910390f35b34801562000b5657600080fd5b5062000b616200235e565b6040518082815260200191505060405180910390f35b62000bd3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002364565b005b34801562000be257600080fd5b5062000c19600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620029bb565b604051808260ff1660ff16815260200191505060405180910390f35b62000c3f620029db565b005b34801562000c4e57600080fd5b5062000cd5600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002ada565b005b34801562000ce457600080fd5b5062000cef62002dcf565b6040518082815260200191505060405180910390f35b34801562000d1257600080fd5b5062000d49600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002dd5565b6040518082815260200191505060405180910390f35b34801562000d6c57600080fd5b5062000df3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002ded565b005b600080828401905083811015151562000e0d57600080fd5b8091505092915050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915060016006600084815260200190815260200160002060009054906101000a900460ff1660ff1614151562000e8f57600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562000f4b573d6000803e3d6000fd5b505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000fcd57600080fd5b60086000846040516020018082805190602001908083835b6020831015156200100c578051825260208201915060208101905060208303925062000fe5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001077578051825260208201915060208101905060208303925062001050565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002090506000816002015414151515620010cd57600080fd5b813073ffffffffffffffffffffffffffffffffffffffff163110151515620010f457600080fd5b8060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156200115f573d6000803e3d6000fd5b507ff39ed54c3a63ca881695c190da1e9572ccc241c340d9f41a22677f1d90bbb43c82846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620011cb578082015181840152602081019050620011ae565b50505050905090810190601f168015620011f95780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050565b60008060086000846040516020018082805190602001908083835b6020831015156200124e578051825260208201915060208101905060208303925062001227565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620012b9578051825260208201915060208101905060208303925062001292565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002090506200131781600301548260060154620035c790919063ffffffff16565b915050919050565b600060076000836040516020018082805190602001908083835b60208310151562001360578051825260208201915060208101905060208303925062001339565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620013cb5780518252602082019150602081019050602083039250620013a4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050919050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415620014ae5760019050620014b3565b600090505b919050565b6008602052806000526040600020600091509050806002015490806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620015745780601f10620015485761010080835404028352916020019162001574565b820191906000526020600020905b8154815290600101906020018083116200155657829003601f168201915b5050505050908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b60008060086000846040516020018082805190602001908083835b6020831015156200163e578051825260208201915060208101905060208303925062001617565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620016a9578051825260208201915060208101905060208303925062001682565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905060008160030154111515620016fe57600080fd5b8060030154915050919050565b6000600160066000846040516020018082805190602001908083835b6020831015156200174e578051825260208201915060208101905060208303925062001727565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620017b9578051825260208201915060208101905060208303925062001792565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff161415156200181657600080fd5b60076000836040516020018082805190602001908083835b6020831015156200185557805182526020820191506020810190506020830392506200182e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620018c0578051825260208201915060208101905060208303925062001899565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060066000836040516020018082805190602001908083835b60208310151562001968578051825260208201915060208101905060208303925062001941565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620019d35780518252602082019150602081019050602083039250620019ac565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff1614151562001a3057600080fd5b600060096000836040516020018082805190602001908083835b60208310151562001a71578051825260208201915060208101905060208303925062001a4a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001adc578051825260208201915060208101905060208303925062001ab5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900481526020019081526020016000205414151562001b2957600080fd5b600160096000836040516020018082805190602001908083835b60208310151562001b6a578051825260208201915060208101905060208303925062001b43565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001bd5578051825260208201915060208101905060208303925062001bae565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398826040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001c9357808201518184015260208101905062001c76565b50505050905090810190601f16801562001cc15780820380516001836020036101000a031916815260200191505b509250505060405180910390a250565b600060066000836040516020018082805190602001908083835b60208310151562001d12578051825260208201915060208101905060208303925062001ceb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001d7d578051825260208201915060208101905060208303925062001d56565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff169050919050565b60046020528060005260406000206000915090505481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001e6857600080fd5b60086000856040516020018082805190602001908083835b60208310151562001ea7578051825260208201915060208101905060208303925062001e80565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001f12578051825260208201915060208101905060208303925062001eeb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905062001f6c83826006015462000df590919063ffffffff16565b81600601819055507f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca64284846040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562001fdf57808201518184015260208101905062001fc2565b50505050905090810190601f1680156200200d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1806006015491505092915050565b60056020528060005260406000206000915090505481565b60008060086000846040516020018082805190602001908083835b6020831015156200208357805182526020820191506020810190506020830392506200205c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620020ee5780518252602082019150602081019050602083039250620020c7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16141562002194576001915062002199565b600091505b5092915050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060086000846040516020018082805190602001908083835b602083101515620022155780518252602082019150602081019050602083039250620021ee565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002280578051825260208201915060208101905060208303925062002259565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156200231357600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60025481565b600080341115156200237557600080fd5b600160066000846040516020018082805190602001908083835b602083101515620023b657805182526020820191506020810190506020830392506200238f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620024215780518252602082019150602081019050602083039250620023fa565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff161415156200247e57600080fd5b60086000836040516020018082805190602001908083835b602083101515620024bd578051825260208201915060208101905060208303925062002496565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002528578051825260208201915060208101905060208303925062002501565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905034600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550816040516020018082805190602001908083835b6020831015156200264157805182526020820191506020810190506020830392506200261a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620026ac578051825260208201915060208101905060208303925062002685565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550620027d1348260010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462000df590919063ffffffff16565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620028306001826002015462000df590919063ffffffff16565b81600201819055504281600501819055506200285a34826003015462000df590919063ffffffff16565b8160030181905550620028b634600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462000df590919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b34846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200297b5780820151818401526020810190506200295e565b50505050905090810190601f168015620029a95780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050565b60036020528060005260406000206000915054906101000a900460ff1681565b620029f23460015462000df590919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562002b3657600080fd5b600160096000856040516020018082805190602001908083835b60208310151562002b77578051825260208201915060208101905060208303925062002b50565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002be2578051825260208201915060208101905060208303925062002bbb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900481526020019081526020016000205414151562002c2f57600080fd5b62002c3c83838362002ded565b600260096000856040516020018082805190602001908083835b60208310151562002c7d578051825260208201915060208101905060208303925062002c56565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002ce8578051825260208201915060208101905060208303925062002cc1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020819055507fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c56836040518080602001828103825283818151815260200191508051906020019080838360005b8381101562002d8f57808201518184015260208101905062002d72565b50505050905090810190601f16801562002dbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050565b60015481565b600a6020528060005260406000206000915090505481565b62002df7620035e9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562002e5357600080fd5b600060066000866040516020018082805190602001908083835b60208310151562002e94578051825260208201915060208101905060208303925062002e6d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002eff578051825260208201915060208101905060208303925062002ed8565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff1614151562002f5c57600080fd5b838160400181905250818160e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160800181815250508060086000866040516020018082805190602001908083835b60208310151562002fe7578051825260208201915060208101905060208303925062002fc0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156200305257805182526020820191506020810190506020830392506200302b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060008201518160020155602082015181600301556040820151816004019080519060200190620030c392919062003671565b50606082015181600501556080820151816006015560a08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050620031c8600160025462000df590919063ffffffff16565b6002819055508382620031da620036f8565b80806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156200324b5780820151818401526020810190506200322e565b50505050905090810190601f168015620032795780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f0801580156200329c573d6000803e3d6000fd5b508160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160066000866040516020018082805190602001908083835b602083101515620033155780518252602082019150602081019050602083039250620032ee565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562003380578051825260208201915060208101905060208303925062003359565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508060c0015160076000866040516020018082805190602001908083835b6020831015156200341b5780518252602082019150602081019050602083039250620033f4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156200348657805182526020820191506020810190506020830392506200345f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fc1490e357730c1a879f6dde9e035b50deef91f0b7521ef58d59d50b46683ca1385856040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200358557808201518184015260208101905062003568565b50505050905090810190601f168015620035b35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250505050565b600080838311151515620035da57600080fd5b82840390508091505092915050565b610100604051908101604052806000815260200160008152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620036b457805160ff1916838001178555620036e5565b82800160010185558215620036e5579182015b82811115620036e4578251825591602001919060010190620036c7565b5b509050620036f4919062003709565b5090565b6040516103e6806200373283390190565b6200372e91905b808211156200372a57600081600090555060010162003710565b5090565b905600608060405234801561001057600080fd5b506040516103e63803806103e68339810180604052810190808051820192919060200180519060200190929190505050816000908051906020019061005692919061009f565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610144565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e057805160ff191683800117855561010e565b8280016001018555821561010e579182015b8281111561010d5782518255916020019190600101906100f2565b5b50905061011b919061011f565b5090565b61014191905b8082111561013d576000816000905550600101610125565b5090565b90565b610293806101536000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f657b4314610051578063efe4fe021461007c575b600080fd5b34801561005d57600080fd5b506100666100fd565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100e3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061011c565b604051808215151515815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561017a57600080fd5b60028290806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906101b79291906101c2565b505060019050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020357805160ff1916838001178555610231565b82800160010185558215610231579182015b82811115610230578251825591602001919060010190610215565b5b50905061023e9190610242565b5090565b61026491905b80821115610260576000816000905550600101610248565b5090565b905600a165627a7a72305820026dd2eee08e8e323ea80fcaa705dc46c4d683d1d32c51f73f720a13bc3025a40029a165627a7a72305820f3b287743ffc9fcdb7b23005ec81d1104e2a9d54be221d5ec2f63962a0c049f30029",
  "deployedBytecode": "0x6080604052600436106200016f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b34a28f146200026e57806312065fe01462000288578063167595ee14620002b65780631a0f74fc146200032c5780631b49df6514620003ac5780632bc3d7aa146200042c5780632c8fe526146200048c57806334f5ca6a14620005ed578063356e2eec146200066d5780633b36ceae14620007195780634ce6033314620007855780634d21aabf146200080b57806353db692814620008655780635815797314620008af5780636e5c2bb214620009395780638356ed8e14620009935780638cb214711462000a3957806393ab52bf1462000aa9578063b27634551462000b49578063b5aebc801462000b77578063ca0cdea81462000bd5578063d0ef19fe1462000c35578063da5504ba1462000c41578063dcd4491b1462000cd7578063f4374aea1462000d05578063fd2202ce1462000d5f575b620001863460015462000df590919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156200027b57600080fd5b506200028662000e17565b005b3480156200029557600080fd5b50620002a062000f50565b6040518082815260200191505060405180910390f35b348015620002c357600080fd5b506200032a600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505062000f6f565b005b3480156200033957600080fd5b5062000396600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200120c565b6040518082815260200191505060405180910390f35b348015620003b957600080fd5b5062000416600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200131f565b6040518082815260200191505060405180910390f35b3480156200043957600080fd5b5062000470600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001449565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200049957600080fd5b50620004ba60048036038101908080359060200190929190505050620014b8565b60405180898152602001888152602001806020018781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825288818151815260200191508051906020019080838360005b83811015620005aa5780820151818401526020810190506200058d565b50505050905090810190601f168015620005d85780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b348015620005fa57600080fd5b5062000657600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620015fc565b6040518082815260200191505060405180910390f35b3480156200067a57600080fd5b50620006d7600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506200170b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200072657600080fd5b5062000783600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001927565b005b3480156200079257600080fd5b50620007ef600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001cd1565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200081857600080fd5b506200084f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001dd1565b6040518082815260200191505060405180910390f35b3480156200087257600080fd5b50620008936004803603810190808035906020019092919050505062001de9565b604051808260ff1660ff16815260200191505060405180910390f35b348015620008bc57600080fd5b5062000923600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505062001e09565b6040518082815260200191505060405180910390f35b3480156200094657600080fd5b506200097d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002029565b6040518082815260200191505060405180910390f35b348015620009a057600080fd5b5062000a1d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002041565b604051808260ff1660ff16815260200191505060405180910390f35b34801562000a4657600080fd5b5062000a6760048036038101908080359060200190929190505050620021a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000ab657600080fd5b5062000b33600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050620021d3565b6040518082815260200191505060405180910390f35b34801562000b5657600080fd5b5062000b616200235e565b6040518082815260200191505060405180910390f35b62000bd3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062002364565b005b34801562000be257600080fd5b5062000c19600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620029bb565b604051808260ff1660ff16815260200191505060405180910390f35b62000c3f620029db565b005b34801562000c4e57600080fd5b5062000cd5600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002ada565b005b34801562000ce457600080fd5b5062000cef62002dcf565b6040518082815260200191505060405180910390f35b34801562000d1257600080fd5b5062000d49600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002dd5565b6040518082815260200191505060405180910390f35b34801562000d6c57600080fd5b5062000df3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062002ded565b005b600080828401905083811015151562000e0d57600080fd5b8091505092915050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915060016006600084815260200190815260200160002060009054906101000a900460ff1660ff1614151562000e8f57600080fd5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562000f4b573d6000803e3d6000fd5b505050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000fcd57600080fd5b60086000846040516020018082805190602001908083835b6020831015156200100c578051825260208201915060208101905060208303925062000fe5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001077578051825260208201915060208101905060208303925062001050565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002090506000816002015414151515620010cd57600080fd5b813073ffffffffffffffffffffffffffffffffffffffff163110151515620010f457600080fd5b8060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156200115f573d6000803e3d6000fd5b507ff39ed54c3a63ca881695c190da1e9572ccc241c340d9f41a22677f1d90bbb43c82846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620011cb578082015181840152602081019050620011ae565b50505050905090810190601f168015620011f95780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050565b60008060086000846040516020018082805190602001908083835b6020831015156200124e578051825260208201915060208101905060208303925062001227565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620012b9578051825260208201915060208101905060208303925062001292565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002090506200131781600301548260060154620035c790919063ffffffff16565b915050919050565b600060076000836040516020018082805190602001908083835b60208310151562001360578051825260208201915060208101905060208303925062001339565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620013cb5780518252602082019150602081019050602083039250620013a4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050919050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415620014ae5760019050620014b3565b600090505b919050565b6008602052806000526040600020600091509050806002015490806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620015745780601f10620015485761010080835404028352916020019162001574565b820191906000526020600020905b8154815290600101906020018083116200155657829003601f168201915b5050505050908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b60008060086000846040516020018082805190602001908083835b6020831015156200163e578051825260208201915060208101905060208303925062001617565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620016a9578051825260208201915060208101905060208303925062001682565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905060008160030154111515620016fe57600080fd5b8060030154915050919050565b6000600160066000846040516020018082805190602001908083835b6020831015156200174e578051825260208201915060208101905060208303925062001727565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620017b9578051825260208201915060208101905060208303925062001792565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff161415156200181657600080fd5b60076000836040516020018082805190602001908083835b6020831015156200185557805182526020820191506020810190506020830392506200182e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620018c0578051825260208201915060208101905060208303925062001899565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060066000836040516020018082805190602001908083835b60208310151562001968578051825260208201915060208101905060208303925062001941565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620019d35780518252602082019150602081019050602083039250620019ac565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff1614151562001a3057600080fd5b600060096000836040516020018082805190602001908083835b60208310151562001a71578051825260208201915060208101905060208303925062001a4a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001adc578051825260208201915060208101905060208303925062001ab5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900481526020019081526020016000205414151562001b2957600080fd5b600160096000836040516020018082805190602001908083835b60208310151562001b6a578051825260208201915060208101905060208303925062001b43565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001bd5578051825260208201915060208101905060208303925062001bae565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398826040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001c9357808201518184015260208101905062001c76565b50505050905090810190601f16801562001cc15780820380516001836020036101000a031916815260200191505b509250505060405180910390a250565b600060066000836040516020018082805190602001908083835b60208310151562001d12578051825260208201915060208101905060208303925062001ceb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001d7d578051825260208201915060208101905060208303925062001d56565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff169050919050565b60046020528060005260406000206000915090505481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001e6857600080fd5b60086000856040516020018082805190602001908083835b60208310151562001ea7578051825260208201915060208101905060208303925062001e80565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562001f12578051825260208201915060208101905060208303925062001eeb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905062001f6c83826006015462000df590919063ffffffff16565b81600601819055507f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca64284846040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101562001fdf57808201518184015260208101905062001fc2565b50505050905090810190601f1680156200200d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1806006015491505092915050565b60056020528060005260406000206000915090505481565b60008060086000846040516020018082805190602001908083835b6020831015156200208357805182526020820191506020810190506020830392506200205c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620020ee5780518252602082019150602081019050602083039250620020c7565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16141562002194576001915062002199565b600091505b5092915050565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060086000846040516020018082805190602001908083835b602083101515620022155780518252602082019150602081019050602083039250620021ee565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002280578051825260208201915060208101905060208303925062002259565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156200231357600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60025481565b600080341115156200237557600080fd5b600160066000846040516020018082805190602001908083835b602083101515620023b657805182526020820191506020810190506020830392506200238f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620024215780518252602082019150602081019050602083039250620023fa565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff161415156200247e57600080fd5b60086000836040516020018082805190602001908083835b602083101515620024bd578051825260208201915060208101905060208303925062002496565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002528578051825260208201915060208101905060208303925062002501565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020905034600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550816040516020018082805190602001908083835b6020831015156200264157805182526020820191506020810190506020830392506200261a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515620026ac578051825260208201915060208101905060208303925062002685565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060018160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550620027d1348260010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462000df590919063ffffffff16565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620028306001826002015462000df590919063ffffffff16565b81600201819055504281600501819055506200285a34826003015462000df590919063ffffffff16565b8160030181905550620028b634600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205462000df590919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b34846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200297b5780820151818401526020810190506200295e565b50505050905090810190601f168015620029a95780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050565b60036020528060005260406000206000915054906101000a900460ff1681565b620029f23460015462000df590919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562002b3657600080fd5b600160096000856040516020018082805190602001908083835b60208310151562002b77578051825260208201915060208101905060208303925062002b50565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002be2578051825260208201915060208101905060208303925062002bbb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900481526020019081526020016000205414151562002c2f57600080fd5b62002c3c83838362002ded565b600260096000856040516020018082805190602001908083835b60208310151562002c7d578051825260208201915060208101905060208303925062002c56565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002ce8578051825260208201915060208101905060208303925062002cc1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190048152602001908152602001600020819055507fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c56836040518080602001828103825283818151815260200191508051906020019080838360005b8381101562002d8f57808201518184015260208101905062002d72565b50505050905090810190601f16801562002dbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050565b60015481565b600a6020528060005260406000206000915090505481565b62002df7620035e9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562002e5357600080fd5b600060066000866040516020018082805190602001908083835b60208310151562002e94578051825260208201915060208101905060208303925062002e6d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562002eff578051825260208201915060208101905060208303925062002ed8565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060009054906101000a900460ff1660ff1614151562002f5c57600080fd5b838160400181905250818160e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160800181815250508060086000866040516020018082805190602001908083835b60208310151562002fe7578051825260208201915060208101905060208303925062002fc0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156200305257805182526020820191506020810190506020830392506200302b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060008201518160020155602082015181600301556040820151816004019080519060200190620030c392919062003671565b50606082015181600501556080820151816006015560a08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050620031c8600160025462000df590919063ffffffff16565b6002819055508382620031da620036f8565b80806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156200324b5780820151818401526020810190506200322e565b50505050905090810190601f168015620032795780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f0801580156200329c573d6000803e3d6000fd5b508160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160066000866040516020018082805190602001908083835b602083101515620033155780518252602082019150602081019050602083039250620032ee565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151562003380578051825260208201915060208101905060208303925062003359565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508060c0015160076000866040516020018082805190602001908083835b6020831015156200341b5780518252602082019150602081019050602083039250620033f4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156200348657805182526020820191506020810190506020830392506200345f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060019004815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fc1490e357730c1a879f6dde9e035b50deef91f0b7521ef58d59d50b46683ca1385856040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200358557808201518184015260208101905062003568565b50505050905090810190601f168015620035b35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250505050565b600080838311151515620035da57600080fd5b82840390508091505092915050565b610100604051908101604052806000815260200160008152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620036b457805160ff1916838001178555620036e5565b82800160010185558215620036e5579182015b82811115620036e4578251825591602001919060010190620036c7565b5b509050620036f4919062003709565b5090565b6040516103e6806200373283390190565b6200372e91905b808211156200372a57600081600090555060010162003710565b5090565b905600608060405234801561001057600080fd5b506040516103e63803806103e68339810180604052810190808051820192919060200180519060200190929190505050816000908051906020019061005692919061009f565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610144565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e057805160ff191683800117855561010e565b8280016001018555821561010e579182015b8281111561010d5782518255916020019190600101906100f2565b5b50905061011b919061011f565b5090565b61014191905b8082111561013d576000816000905550600101610125565b5090565b90565b610293806101536000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f657b4314610051578063efe4fe021461007c575b600080fd5b34801561005d57600080fd5b506100666100fd565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100e3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061011c565b604051808215151515815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561017a57600080fd5b60028290806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906101b79291906101c2565b505060019050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020357805160ff1916838001178555610231565b82800160010185558215610231579182015b82811115610230578251825591602001919060010190610215565b5b50905061023e9190610242565b5090565b61026491905b80821115610260576000816000905550600101610248565b5090565b905600a165627a7a72305820026dd2eee08e8e323ea80fcaa705dc46c4d683d1d32c51f73f720a13bc3025a40029a165627a7a72305820f3b287743ffc9fcdb7b23005ec81d1104e2a9d54be221d5ec2f63962a0c049f30029",
  "sourceMap": "113:1128:2:-;;;765:10:0;757:5;;:18;;;;;;;;;;;;;;;;;;113:1128:2;;;;;;",
  "deployedSourceMap": "113:1128:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:34:0;2228:9;2204:19;;:23;;:34;;;;:::i;:::-;2182:19;:56;;;;2269:1;2248:6;:18;2255:10;2248:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2293:10;2285:42;;;2305:9;2285:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;113:1128:2;2958:980:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2958:980:1;;;;;;4630:98:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4630:98:0;;;;;;;;;;;;;;;;;;;;;;;3754:499;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3754:499:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4897:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4897:223:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:334:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4293:334:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:143:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;207:143:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:40:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1976:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1976:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4727:238:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4727:238:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5010:311;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5010:311:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:420;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:420:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5327:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:41:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;942:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1153:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4314:310;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4314:310:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1049:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:256:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;653:256:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1270:46:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1270:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;968:267:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;968:267:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;264:26:0;;;;;;;;;;;;;;;;;;;;;;;1945:855:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:37:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;843:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:252:1;;;;;;1249:462;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1249:462:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;227:31:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;227:31:0;;;;;;;;;;;;;;;;;;;;;;;542:48:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;542:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2400:1254:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2400:1254:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:131:4;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;2958:980:1:-;3115:8;3558:13;3126:11;:23;3138:10;3126:23;;;;;;;;;;;;;;;;3115:34;;3192:1;3167:16;:21;3184:3;3167:21;;;;;;;;;;;;;;;;;;;;;:26;;;3159:35;;;;;;;;3574:11;:23;3586:10;3574:23;;;;;;;;;;;;;;;;3558:39;;3748:16;:21;3765:3;3748:21;;;;;;;;;;;;;;;;;;;;;:30;;:40;3779:8;3748:40;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3748:40:1;2958:980;;:::o;4630:98:0:-;4678:4;4708;4700:21;;;4693:28;;4630:98;:::o;3754:499::-;3827:23;413:5;;;;;;;;;;;399:19;;:10;:19;;;391:28;;;;;;;;3853:8;:48;3894:3;3877:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3877:21:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3877:21:0;;;3867:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3867:32:0;;;;;;;;;;;;;;;;3862:38;;;3853:48;;;;;;;;;;;3827:74;;3947:3;3919:7;:24;;;:31;;3911:40;;;;;;;;4047:6;4030:4;4022:21;;;:31;;4014:40;;;;;;;;4072:7;:19;;;;;;;;;;;;4064:37;;:45;4102:6;4064:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4064:45:0;4228:18;4234:6;4242:3;4228:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4228:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3754:499;;;:::o;4897:223::-;4965:4;4978:23;5004:8;:49;5045:4;5028:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5028:22:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5028:22:0;;;5018:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5018:33:0;;;;;;;;;;;;;;;;5013:39;;;5004:49;;;;;;;;;;;4978:75;;5069:43;5090:7;:21;;;5069:7;:16;;;:20;;:43;;;;:::i;:::-;5061:52;;4897:223;;;;:::o;4293:334:1:-;4352:4;4460:16;:56;4509:3;4492:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4492:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4492:21:1;;;4482:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4482:32:1;;;;;;;;;;;;;;;;4477:38;;;4460:56;;;;;;;;;;;;;;;;;;;;;:64;;;4453:71;;4293:334;;;:::o;207:143:2:-;258:5;289:1;273:6;:12;280:4;273:12;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;270:76;;;306:1;299:8;;;;270:76;338:1;331:8;;207:143;;;;:::o;1976:40:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4727:238:1:-;4793:4;4806:23;4832:8;:48;4873:3;4856:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4856:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4856:21:1;;;4846:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4846:32:1;;;;;;;;;;;;;;;;4841:38;;;4832:48;;;;;;;;;;;4806:74;;4920:1;4896:7;:21;;;:25;4888:34;;;;;;;;4937:7;:21;;;4930:28;;4727:238;;;;:::o;5010:311::-;5070:7;5155:1;5094:16;:57;5143:4;5126:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5126:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5126:22:1;;;5116:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5116:33:1;;;;;;;;;;;;;;;;5111:39;;;5094:57;;;;;;;;;;;;;;;;;;;;;:62;;;5086:71;;;;;;;;5257:16;:57;5306:4;5289:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5289:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5289:22:1;;;5279:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5279:33:1;;;;;;;;;;;;;;;;5274:39;;;5257:57;;;;;;;;;;;;;;;;;;;;;5250:64;;5010:311;;;:::o;725:420::-;898:1;838:16;:56;887:3;870:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;870:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;870:21:1;;;860:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;860:32:1;;;;;;;;;;;;;;;;855:38;;;838:56;;;;;;;;;;;;;;;;;;;;;:61;;;830:70;;;;;;;;1033:1;980:9;:49;1022:3;1005:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1005:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1005:21:1;;;995:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;995:32:1;;;;;;;;;;;;;;;;990:38;;;980:49;;;;;;;;;;;;:54;972:64;;;;;;;;1098:1;1046:9;:49;1088:3;1071:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1071:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1071:21:1;;;1061:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1061:32:1;;;;;;;;;;;;;;;;1056:38;;;1046:49;;;;;;;;;;;:53;;;;1122:10;1114:24;;;1134:3;1114:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1114:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:420;:::o;5327:143::-;5383:5;5406:16;:57;5455:4;5438:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5438:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5438:22:1;;;5428:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5428:33:1;;;;;;;;;;;;;;;;5423:39;;;5406:57;;;;;;;;;;;;;;;;;;;;;5399:64;;5327:143;;;:::o;942:41:0:-;;;;;;;;;;;;;;;;;:::o;1153:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;4314:310::-;4393:4;4407:23;413:5;;;;;;;;;;;399:19;;:10;:19;;;391:28;;;;;;;;4433:8;:49;4474:4;4457:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4457:22:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4457:22:0;;;4447:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4447:33:0;;;;;;;;;;;;;;;;4442:39;;;4433:49;;;;;;;;;;;4407:75;;4510:31;4531:9;4510:7;:16;;;:20;;:31;;;;:::i;:::-;4491:7;:16;;:50;;;;4555:30;4569:4;4575:9;4555:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4555:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4601:7;:16;;;4594:23;;4314:310;;;;;:::o;1049:41::-;;;;;;;;;;;;;;;;;:::o;653:256:2:-;723:5;735:23;761:8;:48;802:3;785:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;785:21:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;785:21:2;;;775:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;775:32:2;;;;;;;;;;;;;;;;770:38;;;761:48;;;;;;;;;;;735:74;;848:1;818:7;:20;;:26;839:4;818:26;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;815:90;;;865:1;858:8;;;;815:90;897:1;890:8;;653:256;;;;;;:::o;1270:46:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;968:267:2:-;1052:4;1063:23;1089:8;:48;1130:3;1113:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1113:21:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1113:21:2;;;1103:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1103:32:2;;;;;;;;;;;;;;;;1098:38;;;1089:48;;;;;;;;;;;1063:74;;1185:1;1151:7;:24;;:30;1176:4;1151:30;;;;;;;;;;;;;;;;:35;;1143:44;;;;;;;;1200:7;:24;;:30;1225:4;1200:30;;;;;;;;;;;;;;;;1193:37;;968:267;;;;;:::o;264:26:0:-;;;;:::o;1945:855:1:-;2112:23;2018:1;2006:9;:13;1998:22;;;;;;;;2099:1;2038:16;:57;2087:4;2070:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2070:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2070:22:1;;;2060:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2060:33:1;;;;;;;;;;;;;;;;2055:39;;;2038:57;;;;;;;;;;;;;;;;;;;;;:62;;;2030:71;;;;;;;;2138:8;:49;2179:4;2162:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2162:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2162:22:1;;;2152:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2152:33:1;;;;;;;;;;;;;;;;2147:39;;;2138:49;;;;;;;;;;;2112:75;;2224:9;2198:11;:23;2210:10;2198:23;;;;;;;;;;;;;;;:35;;;;2264:1;2243:6;:18;2250:10;2243:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2333:4;2316:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2316:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2316:22:1;;;2306:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2306:33:1;;;;;;;;;;;;;;;;2301:39;;;2275:11;:23;2287:10;2275:23;;;;;;;;;;;;;;;:65;;;;2386:1;2351:7;:20;;:32;2372:10;2351:32;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2436:51;2477:9;2436:7;:24;;:36;2461:10;2436:36;;;;;;;;;;;;;;;;:40;;:51;;;;:::i;:::-;2397:7;:24;;:36;2422:10;2397:36;;;;;;;;;;;;;;;:90;;;;2524:31;2553:1;2524:7;:24;;;:28;;:31;;;;:::i;:::-;2497:7;:24;;:58;;;;2580:3;2565:7;:12;;:18;;;;2617:36;2643:9;2617:7;:21;;;:25;;:36;;;;:::i;:::-;2593:7;:21;;:60;;;;2696:45;2731:9;2696:18;:30;2715:10;2696:30;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;2663:18;:30;2682:10;2663:30;;;;;;;;;;;;;;;:78;;;;2765:10;2757:36;;;2777:9;2788:4;2757:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2757:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:855;;:::o;843:37:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;4001:252:1:-;4072:34;4096:9;4072:19;;:23;;:34;;;;:::i;:::-;4050:19;:56;;;;4191:1;4170:6;:18;4177:10;4170:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;4213:10;4205:41;;;4225:9;4205:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4001:252::o;1249:462::-;413:5:0;;;;;;;;;;;399:19;;:10;:19;;;391:28;;;;;;;;1408:1:1;1355:9;:49;1397:3;1380:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1380:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1380:21:1;;;1370:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1370:32:1;;;;;;;;;;;;;;;;1365:38;;;1355:49;;;;;;;;;;;;:54;1347:63;;;;;;;;1420:39;1434:3;1439:9;1450:8;1420:13;:39::i;:::-;1676:1;1624:9;:49;1666:3;1649:21;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1649:21:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1649:21:1;;;1639:32;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1639:32:1;;;;;;;;;;;;;;;;1634:38;;;1624:49;;;;;;;;;;;:53;;;;1692:12;1700:3;1692:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1692:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1249:462;;;:::o;227:31:0:-;;;;:::o;542:48:1:-;;;;;;;;;;;;;;;;;:::o;2400:1254:0:-;2698:22;;:::i;:::-;413:5;;;;;;;;;;;399:19;;:10;:19;;;391:28;;;;;;;;2686:1;2616:16;:66;2665:13;2648:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2648:31:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2648:31:0;;;2638:42;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2638:42:0;;;;;;;;;;;;;;;;2633:48;;;2616:66;;;;;;;;;;;;;;;;;;;;;:71;;;2608:80;;;;;;;;2753:13;2730:7;:20;;:36;;;;2794:8;2776:7;:15;;:26;;;;;;;;;;;2987:9;2968:7;:16;;:28;;;;;3067:7;3006:8;:58;3047:13;3030:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3030:31:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3030:31:0;;;3020:42;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3020:42:0;;;;;;;;;;;;;;;;3015:48;;;3006:58;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:21;3120:1;3101:14;;:18;;:21;;;;:::i;:::-;3084:14;:38;;;;3214:13;3229:8;3198:40;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3198:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3198:40:0;3176:7;:19;;:62;;;;;;;;;;;3482:1;3413:16;:66;3462:13;3445:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3445:31:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3445:31:0;;;3435:42;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3435:42:0;;;;;;;;;;;;;;;;3430:48;;;3413:66;;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;3562:7;:19;;;3493:16;:66;3542:13;3525:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3525:31:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3525:31:0;;;3515:42;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3515:42:0;;;;;;;;;;;;;;;;3510:48;;;3493:66;;;;;;;;;;;;:88;;;;;;;;;;;;;;;;;;3638:8;3597:50;;;3612:13;3627:9;3597:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3597:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2400:1254;;;;:::o;1079:131:4:-;1137:7;1173:9;1165:1;1160;:6;;1152:15;;;;;;;;1189:1;1185;:5;1173:17;;1204:1;1197:8;;1079:131;;;;;:::o;113:1128:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"./Contributions.sol\";\n\n//@contract to get information about donors/contributors\ncontract Donors is Contributions{\n  //@dev function to check if specific address is a donor\n  function isDonor(address addr) public view returns(uint8){\n    if(donors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev function to check how much specific address has donated\n  /*function getAddressTotalDonations(address addr) public view returns(uint){\n    require(donorContributions[addr] != 0);\n    return donorContributions[addr];\n  }*/\n\n  //@dev function to check if address donated to specific missions\n  function isMissionDonor(address addr, string org) public view returns(uint8){\n    Mission storage mission = missions[uint(keccak256(abi.encodePacked(org)))];\n    if(mission.contributors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev get donor's contributions to specific mission\n  function getAddressToMissionDonations(address addr, string org) public view returns(uint){\n    Mission storage mission = missions[uint(keccak256(abi.encodePacked(org)))];\n    require(mission.addressDonations[addr] != 0);\n    return mission.addressDonations[addr];\n  }\n\n\n\n\n}\n",
  "sourcePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
  "ast": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        943
      ]
    },
    "id": 944,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 846,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 847,
        "nodeType": "ImportDirective",
        "scope": 944,
        "sourceUnit": 845,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 848,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 844,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$844",
                "typeString": "contract Contributions"
              }
            },
            "id": 849,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          389,
          844
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 943,
        "linearizedBaseContracts": [
          943,
          844,
          389
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 858,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 857,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 855,
                        "id": 865,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 867,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 855,
                        "id": 862,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 869,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 943,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "729:180:2",
              "statements": [
                {
                  "assignments": [
                    879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 905,
                      "src": "735:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 878,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 111,
                        "src": "735:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 880,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "761:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Mission_$111_storage_$",
                        "typeString": "mapping(uint256 => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 889,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 885,
                                  "name": "org",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 873,
                                  "src": "802:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 883,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "785:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "785:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "785:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 882,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "775:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "775:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "770:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "770:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "761:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$111_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "735:74:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 891,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "818:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "818:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 894,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 893,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "839:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "818:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "848:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "818:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "882:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "897:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 877,
                        "id": 901,
                        "nodeType": "Return",
                        "src": "890:8:2"
                      }
                    ]
                  },
                  "id": 903,
                  "nodeType": "IfStatement",
                  "src": "815:90:2",
                  "trueBody": {
                    "id": 899,
                    "nodeType": "Block",
                    "src": "850:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "865:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 877,
                        "id": 898,
                        "nodeType": "Return",
                        "src": "858:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 905,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "677:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "691:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "676:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "723:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "722:7:2"
            },
            "scope": 943,
            "src": "653:256:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 941,
              "nodeType": "Block",
              "src": "1057:178:2",
              "statements": [
                {
                  "assignments": [
                    915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 915,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 942,
                      "src": "1063:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 914,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 111,
                        "src": "1063:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 926,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 916,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1089:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Mission_$111_storage_$",
                        "typeString": "mapping(uint256 => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 925,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 921,
                                  "name": "org",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 909,
                                  "src": "1130:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 919,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "1113:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1113:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1113:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 918,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "1103:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1103:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1098:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1098:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1089:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$111_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1063:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 928,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1151:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94,
                            "src": "1151:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 931,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 930,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "1176:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1151:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1185:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1151:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "1143:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 936,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "1200:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "1200:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 939,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 938,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "1225:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1200:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 913,
                  "id": 940,
                  "nodeType": "Return",
                  "src": "1193:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 942,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1006:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1020:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1052:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1051:6:2"
            },
            "scope": 943,
            "src": "968:267:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 944,
        "src": "113:1128:2"
      }
    ],
    "src": "0:1242:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        943
      ]
    },
    "id": 944,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 846,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 847,
        "nodeType": "ImportDirective",
        "scope": 944,
        "sourceUnit": 845,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 848,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 844,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$844",
                "typeString": "contract Contributions"
              }
            },
            "id": 849,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          389,
          844
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 943,
        "linearizedBaseContracts": [
          943,
          844,
          389
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 868,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 856,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 858,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 857,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 851,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 855,
                        "id": 865,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 867,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 855,
                        "id": 862,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 869,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 851,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 869,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 943,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 904,
              "nodeType": "Block",
              "src": "729:180:2",
              "statements": [
                {
                  "assignments": [
                    879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 879,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 905,
                      "src": "735:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 878,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 111,
                        "src": "735:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 890,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 880,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "761:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Mission_$111_storage_$",
                        "typeString": "mapping(uint256 => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 889,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 885,
                                  "name": "org",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 873,
                                  "src": "802:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 883,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "785:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "785:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "785:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 882,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "775:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "775:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "770:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "770:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "761:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$111_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "735:74:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 891,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 879,
                          "src": "818:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90,
                        "src": "818:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 894,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 893,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 871,
                        "src": "839:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "818:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "848:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "818:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "882:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "897:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 877,
                        "id": 901,
                        "nodeType": "Return",
                        "src": "890:8:2"
                      }
                    ]
                  },
                  "id": 903,
                  "nodeType": "IfStatement",
                  "src": "815:90:2",
                  "trueBody": {
                    "id": 899,
                    "nodeType": "Block",
                    "src": "850:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "865:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 877,
                        "id": 898,
                        "nodeType": "Return",
                        "src": "858:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 905,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "677:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "691:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "676:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 905,
                  "src": "723:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "722:7:2"
            },
            "scope": 943,
            "src": "653:256:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 941,
              "nodeType": "Block",
              "src": "1057:178:2",
              "statements": [
                {
                  "assignments": [
                    915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 915,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 942,
                      "src": "1063:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 914,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 111,
                        "src": "1063:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 926,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 916,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "1089:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Mission_$111_storage_$",
                        "typeString": "mapping(uint256 => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 925,
                    "indexExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 921,
                                  "name": "org",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 909,
                                  "src": "1130:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 919,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "1113:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1113:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1113:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 918,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "1103:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1103:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1098:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1098:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1089:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$111_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1063:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 928,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1151:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94,
                            "src": "1151:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 931,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 930,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "1176:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1151:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1185:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1151:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "1143:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 936,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 915,
                        "src": "1200:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$111_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "1200:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 939,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 938,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "1225:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1200:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 913,
                  "id": 940,
                  "nodeType": "Return",
                  "src": "1193:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 942,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 907,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1006:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 909,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1020:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1052:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1051:6:2"
            },
            "scope": 943,
            "src": "968:267:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 944,
        "src": "113:1128:2"
      }
    ],
    "src": "0:1242:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1541314551622": {
      "events": {},
      "links": {},
      "address": "0x0236c912f1178fac81f1b9a253eeb794330fd55d",
      "transactionHash": "0x76ab199f1a56320b24fcc53f52fb696ca4dccc6d4cf8d63d3e5be73667ded370"
    },
    "1541323159677": {
      "events": {},
      "links": {},
      "address": "0xe0338d3cff433482b3fe7f95e8648d1e8506078e",
      "transactionHash": "0xb5f22c76f7fb94bcc0be8df9a7a401d74a05aa70ef3130ce91b429a2bca28917"
    },
    "1541702611401": {
      "events": {},
      "links": {},
      "address": "0xa8de99ffcec6a1905110468094bd9d201537677f",
      "transactionHash": "0xc40ec5f5a603b1cb316db60dd4b45032e22db88fb30208a9b2c824c5719fd028"
    },
    "1541812051336": {
      "events": {},
      "links": {},
      "address": "0x116278cfb1dd2ca91e8decc4e0235db1c93edfed",
      "transactionHash": "0x8ef54141a0b6f6497b326accb1da2ef3847e2a76ad61791c6cfa5a39b1308027"
    },
    "1541906166806": {
      "events": {},
      "links": {},
      "address": "0x8f5ef2a0f287a7160768c522a367ad8ecfa1be9a",
      "transactionHash": "0x9e559c32811598a5b046326cfc2d8786ed98cd15be9597418b767306891fbc78"
    },
    "1541922697825": {
      "events": {},
      "links": {},
      "address": "0x47da202b648cd74ebc3c2ed6d2ee1b862a43762c",
      "transactionHash": "0x30f2ae3472e2bfe13e9ee59b0d6cd59456a845d9e4512eb30a98748b4bcd5603"
    },
    "1543101849678": {
      "events": {},
      "links": {},
      "address": "0x0cbd16f7936852eb769a6056d166d1c2b7fe2cb0",
      "transactionHash": "0xa6868936c9e689b748fe46343e257e0b7ea4dc1c16c947caee60170a6bf2811c"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-25T20:50:51.519Z"
}