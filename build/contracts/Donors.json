{
  "contractName": "Donors",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "giveBack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "donationsToFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "requestMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        }
      ],
      "name": "addFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "missionCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "genericDonation",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        },
        {
          "name": "_orgHead",
          "type": "address"
        }
      ],
      "name": "approveRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "multipurposeBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_organization",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        },
        {
          "name": "_orgHead",
          "type": "address"
        }
      ],
      "name": "createMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Request",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "debug",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "val2",
          "type": "uint256"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Given",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "orgHead",
          "type": "address"
        }
      ],
      "name": "CreatedMission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        }
      ],
      "name": "AddedFundGoal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getAddressTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "isMissionDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getAddressToMissionDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061268d806100536000396000f30060806040526004361062000103576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe01462000202578063167595ee14620002305780631a0f74fc14620002a65780631b49df6514620003265780632bc3d7aa14620003a657806334f5ca6a14620004065780633b36ceae14620004865780635815797314620004f2578063634882a2146200057c5780638356ed8e14620005d657806393ab52bf146200067c578063b2763455146200071c578063b5aebc80146200074a578063d0ef19fe14620007a8578063da5504ba14620007b4578063dcd4491b146200084a578063fd2202ce1462000878575b6200011a346001546200090e90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156200020f57600080fd5b506200021a62000930565b6040518082815260200191505060405180910390f35b3480156200023d57600080fd5b50620002a4600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506200094f565b005b348015620002b357600080fd5b5062000310600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000b70565b6040518082815260200191505060405180910390f35b3480156200033357600080fd5b5062000390600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000c07565b6040518082815260200191505060405180910390f35b348015620003b357600080fd5b50620003ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000cbd565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200041357600080fd5b5062000470600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000d2c565b6040518082815260200191505060405180910390f35b3480156200049357600080fd5b50620004f0600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000dbf565b005b348015620004ff57600080fd5b5062000566600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505062000ff5565b6040518082815260200191505060405180910390f35b3480156200058957600080fd5b50620005c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001199565b6040518082815260200191505060405180910390f35b348015620005e357600080fd5b5062000660600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001231565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200068957600080fd5b5062000706600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001314565b6040518082815260200191505060405180910390f35b3480156200072957600080fd5b506200073462001423565b6040518082815260200191505060405180910390f35b620007a6600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001429565b005b620007b26200193f565b005b348015620007c157600080fd5b5062000848600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001a3e565b005b3480156200085757600080fd5b506200086262001bbe565b6040518082815260200191505060405180910390f35b3480156200088557600080fd5b506200090c600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001bc4565b005b60008082840190508381101515156200092657600080fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620009ad57600080fd5b6005836040518082805190602001908083835b602083101515620009e75780518252602082019150602081019050602083039250620009c0565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600081600201541415151562000a3157600080fd5b813073ffffffffffffffffffffffffffffffffffffffff16311015151562000a5857600080fd5b8060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801562000ac3573d6000803e3d6000fd5b507ff39ed54c3a63ca881695c190da1e9572ccc241c340d9f41a22677f1d90bbb43c82846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562000b2f57808201518184015260208101905062000b12565b50505050905090810190601f16801562000b5d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050565b6000806005836040518082805190602001908083835b60208310151562000bad578051825260208201915060208101905060208303925062000b86565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905062000bff816003015482600601546200211190919063ffffffff16565b915050919050565b6000806005836040518082805190602001908083835b60208310151562000c44578051825260208201915060208101905060208303925062000c1d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631915050919050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16141562000d22576001905062000d27565b600090505b919050565b6000806005836040518082805190602001908083835b60208310151562000d69578051825260208201915060208101905060208303925062000d42565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816003015411151562000db257600080fd5b8060030154915050919050565b60006004826040518082805190602001908083835b60208310151562000dfb578051825260208201915060208101905060208303925062000dd4565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1660ff1614151562000e4c57600080fd5b60006006826040518082805190602001908083835b60208310151562000e88578051825260208201915060208101905060208303925062000e61565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205414151562000ec957600080fd5b60016006826040518082805190602001908083835b60208310151562000f05578051825260208201915060208101905060208303925062000ede565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398826040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000fb757808201518184015260208101905062000f9a565b50505050905090810190601f16801562000fe55780820380516001836020036101000a031916815260200191505b509250505060405180910390a250565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200105457600080fd5b6005846040518082805190602001908083835b6020831015156200108e578051825260208201915060208101905060208303925062001067565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050620010dc8382600601546200090e90919063ffffffff16565b81600601819055507f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca64284846040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200114f57808201518184015260208101905062001132565b50505050905090810190601f1680156200117d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1806006015491505092915050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151515620011ea57600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806005836040518082805190602001908083835b6020831015156200126e578051825260208201915060208101905060208303925062001247565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1614156200130857600191506200130d565b600091505b5092915050565b6000806005836040518082805190602001908083835b6020831015156200135157805182526020820191506020810190506020830392506200132a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151515620013d857600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60025481565b6000806000803493506000341115156200144257600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506005856040518082805190602001908083835b602083101515620014d55780518252602082019150602081019050602083039250620014ae565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209250670de0b6b3a76400009150816200152f8585600301546200090e90919063ffffffff16565b0290508260080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f193505050501580156200159d573d6000803e3d6000fd5b507fe5589756feb14fa54053633b30d9de8c8c4a3347afc5bd6efc411f7823ae87f28360080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163160405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825260078152602001807f42414c414e434500000000000000000000000000000000000000000000000000815250602001935050505060405180910390a160018360000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555062001752848460010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200090e90919063ffffffff16565b8360010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620017b1600184600201546200090e90919063ffffffff16565b8360020181905550428360050181905550620017db8484600301546200090e90919063ffffffff16565b83600301819055506200183734600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200090e90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b85876040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620018fc578082015181840152602081019050620018df565b50505050905090810190601f1680156200192a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050505050565b62001956346001546200090e90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001a9a57600080fd5b62001aa783838362001bc4565b60026006846040518082805190602001908083835b60208310151562001ae3578051825260208201915060208101905060208303925062001abc565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020819055507fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c56836040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001b7e57808201518184015260208101905062001b61565b50505050905090810190601f16801562001bac5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050565b60015481565b62001bce62002133565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001c2c57600080fd5b60006004866040518082805190602001908083835b60208310151562001c68578051825260208201915060208101905060208303925062001c41565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1660ff1614151562001cb957600080fd5b848260400181905250828260e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050670de0b6b3a76400009050808402935083826080018181525050816005866040518082805190602001908083835b60208310151562001d4f578051825260208201915060208101905060208303925062001d28565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401908051906020019062001db4929190620021bb565b50606082015181600501556080820151816006015560a08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505062001eb960016002546200090e90919063ffffffff16565b600281905550848362001ecb62002242565b80806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101562001f3c57808201518184015260208101905062001f1f565b50505050905090810190601f16801562001f6a5780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562001f8d573d6000803e3d6000fd5b508260c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060016004866040518082805190602001908083835b60208310151562002001578051825260208201915060208101905060208303925062001fda565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff021916908360ff1602179055508273ffffffffffffffffffffffffffffffffffffffff167fc1490e357730c1a879f6dde9e035b50deef91f0b7521ef58d59d50b46683ca1386866040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015620020ce578082015181840152602081019050620020b1565b50505050905090810190601f168015620020fc5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050505050565b6000808383111515156200212457600080fd5b82840390508091505092915050565b610100604051908101604052806000815260200160008152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620021fe57805160ff19168380011785556200222f565b828001600101855582156200222f579182015b828111156200222e57825182559160200191906001019062002211565b5b5090506200223e919062002253565b5090565b6040516103e6806200227c83390190565b6200227891905b80821115620022745760008160009055506001016200225a565b5090565b905600608060405234801561001057600080fd5b506040516103e63803806103e68339810180604052810190808051820192919060200180519060200190929190505050816000908051906020019061005692919061009f565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610144565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e057805160ff191683800117855561010e565b8280016001018555821561010e579182015b8281111561010d5782518255916020019190600101906100f2565b5b50905061011b919061011f565b5090565b61014191905b8082111561013d576000816000905550600101610125565b5090565b90565b610293806101536000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f657b4314610051578063efe4fe021461007c575b600080fd5b34801561005d57600080fd5b506100666100fd565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100e3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061011c565b604051808215151515815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561017a57600080fd5b60028290806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906101b79291906101c2565b505060019050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020357805160ff1916838001178555610231565b82800160010185558215610231579182015b82811115610230578251825591602001919060010190610215565b5b50905061023e9190610242565b5090565b61026491905b80821115610260576000816000905550600101610248565b5090565b905600a165627a7a72305820375dd68b448b11e43069a6a24fdd269ad4b7b31ff97e3a39730313ec549c377a0029a165627a7a72305820d356aa095c90da4952430a22d9219882ba9c154fbeca3e29631aaed508452a5f0029",
  "deployedBytecode": "0x60806040526004361062000103576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe01462000202578063167595ee14620002305780631a0f74fc14620002a65780631b49df6514620003265780632bc3d7aa14620003a657806334f5ca6a14620004065780633b36ceae14620004865780635815797314620004f2578063634882a2146200057c5780638356ed8e14620005d657806393ab52bf146200067c578063b2763455146200071c578063b5aebc80146200074a578063d0ef19fe14620007a8578063da5504ba14620007b4578063dcd4491b146200084a578063fd2202ce1462000878575b6200011a346001546200090e90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156200020f57600080fd5b506200021a62000930565b6040518082815260200191505060405180910390f35b3480156200023d57600080fd5b50620002a4600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506200094f565b005b348015620002b357600080fd5b5062000310600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000b70565b6040518082815260200191505060405180910390f35b3480156200033357600080fd5b5062000390600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000c07565b6040518082815260200191505060405180910390f35b348015620003b357600080fd5b50620003ea600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062000cbd565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200041357600080fd5b5062000470600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000d2c565b6040518082815260200191505060405180910390f35b3480156200049357600080fd5b50620004f0600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062000dbf565b005b348015620004ff57600080fd5b5062000566600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192908035906020019092919050505062000ff5565b6040518082815260200191505060405180910390f35b3480156200058957600080fd5b50620005c0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001199565b6040518082815260200191505060405180910390f35b348015620005e357600080fd5b5062000660600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001231565b604051808260ff1660ff16815260200191505060405180910390f35b3480156200068957600080fd5b5062000706600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001314565b6040518082815260200191505060405180910390f35b3480156200072957600080fd5b506200073462001423565b6040518082815260200191505060405180910390f35b620007a6600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505062001429565b005b620007b26200193f565b005b348015620007c157600080fd5b5062000848600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001a3e565b005b3480156200085757600080fd5b506200086262001bbe565b6040518082815260200191505060405180910390f35b3480156200088557600080fd5b506200090c600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001bc4565b005b60008082840190508381101515156200092657600080fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620009ad57600080fd5b6005836040518082805190602001908083835b602083101515620009e75780518252602082019150602081019050602083039250620009c0565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600081600201541415151562000a3157600080fd5b813073ffffffffffffffffffffffffffffffffffffffff16311015151562000a5857600080fd5b8060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801562000ac3573d6000803e3d6000fd5b507ff39ed54c3a63ca881695c190da1e9572ccc241c340d9f41a22677f1d90bbb43c82846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101562000b2f57808201518184015260208101905062000b12565b50505050905090810190601f16801562000b5d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1505050565b6000806005836040518082805190602001908083835b60208310151562000bad578051825260208201915060208101905060208303925062000b86565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905062000bff816003015482600601546200211190919063ffffffff16565b915050919050565b6000806005836040518082805190602001908083835b60208310151562000c44578051825260208201915060208101905060208303925062000c1d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631915050919050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16141562000d22576001905062000d27565b600090505b919050565b6000806005836040518082805190602001908083835b60208310151562000d69578051825260208201915060208101905060208303925062000d42565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816003015411151562000db257600080fd5b8060030154915050919050565b60006004826040518082805190602001908083835b60208310151562000dfb578051825260208201915060208101905060208303925062000dd4565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1660ff1614151562000e4c57600080fd5b60006006826040518082805190602001908083835b60208310151562000e88578051825260208201915060208101905060208303925062000e61565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205414151562000ec957600080fd5b60016006826040518082805190602001908083835b60208310151562000f05578051825260208201915060208101905060208303925062000ede565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020819055503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398826040518080602001828103825283818151815260200191508051906020019080838360005b8381101562000fb757808201518184015260208101905062000f9a565b50505050905090810190601f16801562000fe55780820380516001836020036101000a031916815260200191505b509250505060405180910390a250565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200105457600080fd5b6005846040518082805190602001908083835b6020831015156200108e578051825260208201915060208101905060208303925062001067565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050620010dc8382600601546200090e90919063ffffffff16565b81600601819055507f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca64284846040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200114f57808201518184015260208101905062001132565b50505050905090810190601f1680156200117d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a1806006015491505092915050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151515620011ea57600080fd5b600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806005836040518082805190602001908083835b6020831015156200126e578051825260208201915060208101905060208303925062001247565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1614156200130857600191506200130d565b600091505b5092915050565b6000806005836040518082805190602001908083835b6020831015156200135157805182526020820191506020810190506020830392506200132a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151515620013d857600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60025481565b6000806000803493506000341115156200144257600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506005856040518082805190602001908083835b602083101515620014d55780518252602082019150602081019050602083039250620014ae565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209250670de0b6b3a76400009150816200152f8585600301546200090e90919063ffffffff16565b0290508260080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc859081150290604051600060405180830381858888f193505050501580156200159d573d6000803e3d6000fd5b507fe5589756feb14fa54053633b30d9de8c8c4a3347afc5bd6efc411f7823ae87f28360080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163160405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825260078152602001807f42414c414e434500000000000000000000000000000000000000000000000000815250602001935050505060405180910390a160018360000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555062001752848460010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200090e90919063ffffffff16565b8360010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620017b1600184600201546200090e90919063ffffffff16565b8360020181905550428360050181905550620017db8484600301546200090e90919063ffffffff16565b83600301819055506200183734600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200090e90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b85876040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015620018fc578082015181840152602081019050620018df565b50505050905090810190601f1680156200192a5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050505050565b62001956346001546200090e90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001a9a57600080fd5b62001aa783838362001bc4565b60026006846040518082805190602001908083835b60208310151562001ae3578051825260208201915060208101905060208303925062001abc565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020819055507fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c56836040518080602001828103825283818151815260200191508051906020019080838360005b8381101562001b7e57808201518184015260208101905062001b61565b50505050905090810190601f16801562001bac5780820380516001836020036101000a031916815260200191505b509250505060405180910390a1505050565b60015481565b62001bce62002133565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562001c2c57600080fd5b60006004866040518082805190602001908083835b60208310151562001c68578051825260208201915060208101905060208303925062001c41565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900460ff1660ff1614151562001cb957600080fd5b848260400181905250828260e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050670de0b6b3a76400009050808402935083826080018181525050816005866040518082805190602001908083835b60208310151562001d4f578051825260208201915060208101905060208303925062001d28565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401908051906020019062001db4929190620021bb565b50606082015181600501556080820151816006015560a08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505062001eb960016002546200090e90919063ffffffff16565b600281905550848362001ecb62002242565b80806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101562001f3c57808201518184015260208101905062001f1f565b50505050905090810190601f16801562001f6a5780820380516001836020036101000a031916815260200191505b509350505050604051809103906000f08015801562001f8d573d6000803e3d6000fd5b508260c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060016004866040518082805190602001908083835b60208310151562002001578051825260208201915060208101905060208303925062001fda565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548160ff021916908360ff1602179055508273ffffffffffffffffffffffffffffffffffffffff167fc1490e357730c1a879f6dde9e035b50deef91f0b7521ef58d59d50b46683ca1386866040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015620020ce578082015181840152602081019050620020b1565b50505050905090810190601f168015620020fc5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a25050505050565b6000808383111515156200212457600080fd5b82840390508091505092915050565b610100604051908101604052806000815260200160008152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620021fe57805160ff19168380011785556200222f565b828001600101855582156200222f579182015b828111156200222e57825182559160200191906001019062002211565b5b5090506200223e919062002253565b5090565b6040516103e6806200227c83390190565b6200227891905b80821115620022745760008160009055506001016200225a565b5090565b905600608060405234801561001057600080fd5b506040516103e63803806103e68339810180604052810190808051820192919060200180519060200190929190505050816000908051906020019061005692919061009f565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610144565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100e057805160ff191683800117855561010e565b8280016001018555821561010e579182015b8281111561010d5782518255916020019190600101906100f2565b5b50905061011b919061011f565b5090565b61014191905b8082111561013d576000816000905550600101610125565b5090565b90565b610293806101536000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630f657b4314610051578063efe4fe021461007c575b600080fd5b34801561005d57600080fd5b506100666100fd565b6040518082815260200191505060405180910390f35b34801561008857600080fd5b506100e3600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061011c565b604051808215151515815260200191505060405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561017a57600080fd5b60028290806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906101b79291906101c2565b505060019050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020357805160ff1916838001178555610231565b82800160010185558215610231579182015b82811115610230578251825591602001919060010190610215565b5b50905061023e9190610242565b5090565b61026491905b80821115610260576000816000905550600101610248565b5090565b905600a165627a7a72305820375dd68b448b11e43069a6a24fdd269ad4b7b31ff97e3a39730313ec549c377a0029a165627a7a72305820d356aa095c90da4952430a22d9219882ba9c154fbeca3e29631aaed508452a5f0029",
  "sourceMap": "113:1054:2:-;;;684:10:0;676:5;;:18;;;;;;;;;;;;;;;;;;113:1054:2;;;;;;",
  "deployedSourceMap": "113:1054:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2014:34:0;2038:9;2014:19;;:23;;:34;;;;:::i;:::-;1992:19;:56;;;;2079:1;2058:6;:18;2065:10;2058:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2103:10;2095:42;;;2115:9;2095:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;113:1054:2;4107:98:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4107:98:0;;;;;;;;;;;;;;;;;;;;;;;3301:464;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3301:464:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4374:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4374:188:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3836:215:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3836:215:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:143:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;207:143:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4150:203:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4150:203:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:489;;8:9:-1;5:2;;;30:1;27;20:12;5:2;598:489:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3826:275:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3826:275:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:159:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:159:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;929:232:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;230:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:26:0;;;;;;;;;;;;;;;;;;;;;;;1953:1528:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:252;;;;;;1191:528;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1191:528:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:31:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;193:31:0;;;;;;;;;;;;;;;;;;;;;;;2210:991;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2210:991:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:131:4;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;4107:98:0:-;4155:4;4185;4177:21;;;4170:28;;4107:98;:::o;3301:464::-;3374:23;332:5;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;3400:8;3409:3;3400:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3400:13:0;;;;;;;;;;;;;;;;;;;;;3374:39;;3459:3;3431:7;:24;;;:31;;3423:40;;;;;;;;3559:6;3542:4;3534:21;;;:31;;3526:40;;;;;;;;3584:7;:19;;;;;;;;;;;;3576:37;;:45;3614:6;3576:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3576:45:0;3740:18;3746:6;3754:3;3740:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3740:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3301:464;;;:::o;4374:188::-;4442:4;4455:23;4481:8;4490:4;4481:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4481:14:0;;;;;;;;;;;;;;;;;;;;;4455:40;;4511:43;4532:7;:21;;;4511:7;:16;;;:20;;:43;;;;:::i;:::-;4503:52;;4374:188;;;;:::o;3836:215:1:-;3895:4;3910:23;3936:8;3945:3;3936:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3936:13:1;;;;;;;;;;;;;;;;;;;;;3910:39;;3974:7;:19;;;;;;;;;;;;3966:36;;;3959:43;;3836:215;;;;:::o;207:143:2:-;258:5;289:1;273:6;:12;280:4;273:12;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;270:76;;;306:1;299:8;;;;270:76;338:1;331:8;;207:143;;;;:::o;4150:203:1:-;4216:4;4229:23;4255:8;4264:3;4255:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4255:13:1;;;;;;;;;;;;;;;;;;;;;4229:39;;4308:1;4284:7;:21;;;:25;4276:34;;;;;;;;4325:7;:21;;;4318:28;;4150:203;;;;:::o;598:489::-;736:1;711:16;728:3;711:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;711:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;703:35;;;;;;;;836:1;818:9;828:3;818:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;818:14:1;;;;;;;;;;;;;;;;;;;;;;:19;810:29;;;;;;;;1040:1;1023:9;1033:3;1023:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1023:14:1;;;;;;;;;;;;;;;;;;;;;:18;;;;1064:10;1056:24;;;1076:3;1056:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1056:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:489;:::o;3826:275:0:-;3905:4;3919:23;332:5;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;3945:8;3954:4;3945:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3945:14:0;;;;;;;;;;;;;;;;;;;;;3919:40;;3987:31;4008:9;3987:7;:16;;;:20;;:31;;;;:::i;:::-;3968:7;:16;;:50;;;;4032:30;4046:4;4052:9;4032:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4032:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4078:7;:16;;;4071:23;;3826:275;;;;;:::o;419:159:2:-;487:4;534:1;506:18;:24;525:4;506:24;;;;;;;;;;;;;;;;:29;;498:38;;;;;;;;549:18;:24;568:4;549:24;;;;;;;;;;;;;;;;542:31;;419:159;;;:::o;649:221::-;719:5;731:23;757:8;766:3;757:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;757:13:2;;;;;;;;;;;;;;;;;;;;;731:39;;809:1;779:7;:20;;:26;800:4;779:26;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;776:90;;;826:1;819:8;;;;776:90;858:1;851:8;;649:221;;;;;;:::o;929:232::-;1013:4;1024:23;1050:8;1059:3;1050:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1050:13:2;;;;;;;;;;;;;;;;;;;;;1024:39;;1111:1;1077:7;:24;;:30;1102:4;1077:30;;;;;;;;;;;;;;;;:35;;1069:44;;;;;;;;1126:7;:24;;:30;1151:4;1126:30;;;;;;;;;;;;;;;;1119:37;;929:232;;;;;:::o;230:26:0:-;;;;:::o;1953:1528:1:-;2005:11;2154:23;2433:13;2466:22;2019:9;2005:23;;2104:7;2092:9;:19;2084:28;;;;;;;;2143:1;2122:6;:18;2129:10;2122:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2180:8;2189:3;2180:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2180:13:1;;;;;;;;;;;;;;;;;;;;;2154:39;;2449:7;2433:23;;2527:8;2491:33;2517:6;2491:7;:21;;;:25;;:33;;;;:::i;:::-;:44;2466:69;;2683:7;:19;;;;;;;;;;;;2675:37;;:45;2713:6;2675:45;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2675:45:1;2773:83;2798:7;:19;;;;;;;;;;;;2827:7;:19;;;;;;;;;;;;2819:36;;;2773:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3078:1;3043:7;:20;;:32;3064:10;3043:32;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3128:48;3169:6;3128:7;:24;;:36;3153:10;3128:36;;;;;;;;;;;;;;;;:40;;:48;;;;:::i;:::-;3089:7;:24;;:36;3114:10;3089:36;;;;;;;;;;;;;;;:87;;;;3213:31;3242:1;3213:7;:24;;;:28;;:31;;;;:::i;:::-;3186:7;:24;;:58;;;;3269:3;3254:7;:12;;:18;;;;3306:33;3332:6;3306:7;:21;;;:25;;:33;;;;:::i;:::-;3282:7;:21;;:57;;;;3382:45;3417:9;3382:18;:30;3401:10;3382:30;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;3349:18;:30;3368:10;3349:30;;;;;;;;;;;;;;;:78;;;;3450:10;3442:32;;;3462:6;3470:3;3442:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3442:32:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:1528;;;;;:::o;3544:252::-;3615:34;3639:9;3615:19;;:23;;:34;;;;:::i;:::-;3593:19;:56;;;;3734:1;3713:6;:18;3720:10;3713:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3756:10;3748:41;;;3768:9;3748:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:252::o;1191:528::-;332:5:0;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;1289:39:1;1303:3;1308:9;1319:8;1289:13;:39::i;:::-;1684:1;1667:9;1677:3;1667:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1667:14:1;;;;;;;;;;;;;;;;;;;;;:18;;;;1700:12;1708:3;1700:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1700:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:528;;;:::o;193:31:0:-;;;;:::o;2210:991::-;2473:22;;:::i;:::-;2664:13;332:5;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;2461:1;2426:16;2443:13;2426:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2426:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;2418:45;;;;;;;;2528:13;2505:7;:20;;:36;;;;2569:8;2551:7;:15;;:26;;;;;;;;;;;2680:7;2664:23;;2721:8;2709:9;:20;2697:32;;2758:9;2739:7;:16;;:28;;;;;2803:7;2777:8;2786:13;2777:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2777:23:0;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2837:21;2856:1;2837:14;;:18;;:21;;;;:::i;:::-;2820:14;:38;;;;2950:13;2965:8;2934:40;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2934:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2934:40:0;2912:7;:19;;:62;;;;;;;;;;;3126:1;3092:16;3109:13;3092:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3092:31:0;;;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3185:8;3144:50;;;3159:13;3174:9;3144:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3144:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2210:991;;;;;:::o;1079:131:4:-;1137:7;1173:9;1165:1;1160;:6;;1152:15;;;;;;;;1189:1;1185;:5;1173:17;;1204:1;1197:8;;1079:131;;;;;:::o;113:1054:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"./Contributions.sol\";\n\n//@contract to get information about donors/contributors\ncontract Donors is Contributions{\n  //@dev function to check if specific address is a donor\n  function isDonor(address addr) public view returns(uint8){\n    if(donors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev function to check how much specific address has donated\n  function getAddressTotalDonations(address addr) public view returns(uint){\n    require(donorContributions[addr] != 0);\n    return donorContributions[addr];\n  }\n\n  //@dev function to check if address donated to specific missions\n  function isMissionDonor(address addr, string org) public view returns(uint8){\n    Mission storage mission = missions[org];\n    if(mission.contributors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev get donor's contributions to specific mission\n  function getAddressToMissionDonations(address addr, string org) public view returns(uint){\n    Mission storage mission = missions[org];\n    require(mission.addressDonations[addr] != 0);\n    return mission.addressDonations[addr];\n  }\n\n\n\n\n}\n",
  "sourcePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
  "ast": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        737
      ]
    },
    "id": 738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 634,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 635,
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 633,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 636,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 632,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$632",
                "typeString": "contract Contributions"
              }
            },
            "id": 637,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          325,
          632
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 737,
        "linearizedBaseContracts": [
          737,
          632,
          325
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 654,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 643,
                        "id": 653,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 655,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 651,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 643,
                        "id": 650,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 657,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 737,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "492:86:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 665,
                            "name": "donorContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "506:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 667,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "525:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "506:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "506:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        954,
                        955
                      ],
                      "referencedDeclaration": 954,
                      "src": "498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "498:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 672,
                      "name": "donorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "549:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 674,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 673,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "568:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "549:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 663,
                  "id": 675,
                  "nodeType": "Return",
                  "src": "542:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 677,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressTotalDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "453:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "452:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "487:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:6:2"
            },
            "scope": 737,
            "src": "419:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "725:145:2",
              "statements": [
                {
                  "assignments": [
                    687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 687,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "731:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 686,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 93,
                        "src": "731:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 688,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "757:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$93_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 690,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 689,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "766:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "757:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$93_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:39:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "779:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 695,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "779:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "809:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "779:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "843:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 685,
                        "id": 702,
                        "nodeType": "Return",
                        "src": "851:8:2"
                      }
                    ]
                  },
                  "id": 704,
                  "nodeType": "IfStatement",
                  "src": "776:90:2",
                  "trueBody": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "811:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 685,
                        "id": 699,
                        "nodeType": "Return",
                        "src": "819:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 706,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "673:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "687:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "719:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:7:2"
            },
            "scope": 737,
            "src": "649:221:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "1018:143:2",
              "statements": [
                {
                  "assignments": [
                    716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 716,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 736,
                      "src": "1024:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 715,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 93,
                        "src": "1024:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 717,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1050:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$93_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 719,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 718,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "1059:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$93_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 722,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "1077:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 723,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "1077:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 725,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 724,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "1102:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1077:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1077:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        954,
                        955
                      ],
                      "referencedDeclaration": 954,
                      "src": "1069:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "1126:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 733,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 732,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "1151:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 714,
                  "id": 734,
                  "nodeType": "Return",
                  "src": "1119:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 736,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "967:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "981:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "1013:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:6:2"
            },
            "scope": 737,
            "src": "929:232:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 738,
        "src": "113:1054:2"
      }
    ],
    "src": "0:1168:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        737
      ]
    },
    "id": 738,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 634,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 635,
        "nodeType": "ImportDirective",
        "scope": 738,
        "sourceUnit": 633,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 636,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 632,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$632",
                "typeString": "contract Contributions"
              }
            },
            "id": 637,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          325,
          632
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 737,
        "linearizedBaseContracts": [
          737,
          632,
          325
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 639,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 654,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 643,
                        "id": 653,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 655,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 651,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 643,
                        "id": 650,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 657,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 642,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 737,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "492:86:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 665,
                            "name": "donorContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "506:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 667,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 666,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "525:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "506:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "506:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        954,
                        955
                      ],
                      "referencedDeclaration": 954,
                      "src": "498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "498:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 672,
                      "name": "donorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 360,
                      "src": "549:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 674,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 673,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 659,
                      "src": "568:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "549:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 663,
                  "id": 675,
                  "nodeType": "Return",
                  "src": "542:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 677,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressTotalDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "453:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "452:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 662,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "487:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:6:2"
            },
            "scope": 737,
            "src": "419:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "725:145:2",
              "statements": [
                {
                  "assignments": [
                    687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 687,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 706,
                      "src": "731:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 686,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 93,
                        "src": "731:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 688,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "757:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$93_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 690,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 689,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "766:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "757:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$93_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:39:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 692,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "779:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 693,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 695,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 694,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "779:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "809:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "779:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "843:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 685,
                        "id": 702,
                        "nodeType": "Return",
                        "src": "851:8:2"
                      }
                    ]
                  },
                  "id": 704,
                  "nodeType": "IfStatement",
                  "src": "776:90:2",
                  "trueBody": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "811:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 685,
                        "id": 699,
                        "nodeType": "Return",
                        "src": "819:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 706,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "673:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "687:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 684,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "719:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:7:2"
            },
            "scope": 737,
            "src": "649:221:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "1018:143:2",
              "statements": [
                {
                  "assignments": [
                    716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 716,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 736,
                      "src": "1024:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 715,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 93,
                        "src": "1024:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 717,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97,
                      "src": "1050:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$93_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 719,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 718,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 710,
                      "src": "1059:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$93_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 722,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "1077:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 723,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "1077:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 725,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 724,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "1102:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1077:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1077:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        954,
                        955
                      ],
                      "referencedDeclaration": 954,
                      "src": "1069:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$93_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "1126:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 733,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 732,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "1151:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 714,
                  "id": 734,
                  "nodeType": "Return",
                  "src": "1119:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 736,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "967:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "981:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "1013:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:6:2"
            },
            "scope": 737,
            "src": "929:232:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 738,
        "src": "113:1054:2"
      }
    ],
    "src": "0:1168:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1541314551622": {
      "events": {},
      "links": {},
      "address": "0x0236c912f1178fac81f1b9a253eeb794330fd55d",
      "transactionHash": "0x76ab199f1a56320b24fcc53f52fb696ca4dccc6d4cf8d63d3e5be73667ded370"
    },
    "1541323159677": {
      "events": {},
      "links": {},
      "address": "0xe0338d3cff433482b3fe7f95e8648d1e8506078e",
      "transactionHash": "0xb5f22c76f7fb94bcc0be8df9a7a401d74a05aa70ef3130ce91b429a2bca28917"
    },
    "1541702611401": {
      "events": {},
      "links": {},
      "address": "0xa8de99ffcec6a1905110468094bd9d201537677f",
      "transactionHash": "0xc40ec5f5a603b1cb316db60dd4b45032e22db88fb30208a9b2c824c5719fd028"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-08T18:45:48.638Z"
}