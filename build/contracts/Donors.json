{
  "contractName": "Donors",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "donationsToFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "approveRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "requestMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        }
      ],
      "name": "addFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "giveBack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "missionCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "genericDonation",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "multipurposeBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_organization",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        }
      ],
      "name": "createMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Request",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Given",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        }
      ],
      "name": "CreatedMission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        }
      ],
      "name": "AddedFundGoal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getAddressTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "isMissionDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getAddressToMissionDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612056806100536000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146101ee5780631a0f74fc146102195780631b49df65146102965780631e0715df146103135780632bc3d7aa1461037c57806334f5ca6a146103d95780633b36ceae1461045657806358157973146104bf578063634882a2146105465780638356ed8e1461059d57806393ab52bf14610640578063aa130d9a146106dd578063b276345514610770578063b5aebc801461079b578063d0ef19fe146107f7578063dcd4491b14610801578063ee8631801461082c575b6101063460015461089f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156101fa57600080fd5b506102036108c0565b6040518082815260200191505060405180910390f35b34801561022557600080fd5b50610280600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506108df565b6040518082815260200191505060405180910390f35b3480156102a257600080fd5b506102fd600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061095c565b6040518082815260200191505060405180910390f35b34801561031f57600080fd5b5061037a600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506109d9565b005b34801561038857600080fd5b506103bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d62565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103e557600080fd5b50610440600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610dcf565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b506104bd600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610e5f565b005b3480156104cb57600080fd5b50610530600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506110ec565b6040518082815260200191505060405180910390f35b34801561055257600080fd5b50610587600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061127e565b6040518082815260200191505060405180910390f35b3480156105a957600080fd5b50610624600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611315565b604051808260ff1660ff16815260200191505060405180910390f35b34801561064c57600080fd5b506106c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506113f4565b6040518082815260200191505060405180910390f35b3480156106e957600080fd5b5061076e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611500565b005b34801561077c57600080fd5b5061078561173d565b6040518082815260200191505060405180910390f35b6107f5600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611743565b005b6107ff611af6565b005b34801561080d57600080fd5b50610816611bf3565b6040518082815260200191505060405180910390f35b34801561083857600080fd5b5061089d600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611bf9565b005b60008082840190508381101515156108b657600080fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000806004836040518082805190602001908083835b60208310151561091a57805182526020820191506020810190506020830392506108f5565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060080154915050919050565b6000806004836040518082805190602001908083835b6020831015156109975780518252602082019150602081019050602083039250610972565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060030154915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a3657600080fd5b6005826040518082805190602001908083835b602083101515610a6e5780518252602082019150602081019050602083039250610a49565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050806004836040518082805190602001908083835b602083101515610adc5780518252602082019150602081019050602083039250610ab7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060028201548160020155600382015481600301556004820154816004015560058201816005019080546001816001161561010002031660029004610b54929190611e5a565b506006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610bf3600160025461089f90919063ffffffff16565b6002819055506005826040518082805190602001908083835b602083101515610c315780518252602082019150602081019050602083039250610c0c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000600282016000905560038201600090556004820160009055600582016000610c8e9190611ee1565b6006820160009055600782016000905560088201600090556009820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050816040518082805190602001908083835b602083101515610d055780518252602082019150602081019050602083039250610ce0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c5660405160405180910390a25050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415610dc55760019050610dca565b600090505b919050565b6000806004836040518082805190602001908083835b602083101515610e0a5780518252602082019150602081019050602083039250610de5565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160040154111515610e5257600080fd5b8060040154915050919050565b610e67611f29565b60006004836040518082805190602001908083835b602083101515610ea15780518252602082019150602081019050602083039250610e7c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206007015414151515610ee557600080fd5b818160600181905250338160e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806005836040518082805190602001908083835b602083101515610f5f5780518252602082019150602081019050602083039250610f3a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190610fcc929190611f85565b506080820151816006015560a0820151816007015560c0820151816008015560e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398836040518080602001828103825283818151815260200191508051906020019080838360005b838110156110ae578082015181840152602081019050611093565b50505050905090810190601f1680156110db5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114a57600080fd5b6004846040518082805190602001908083835b602083101515611182578051825260208201915060208101905060208303925061115d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506111ce83826007015461089f90919063ffffffff16565b8160070181905550836040518082805190602001908083835b60208310151561120c57805182526020820191506020810190506020830392506111e7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca642846040518082815260200191505060405180910390a2806007015491505092915050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156112ce57600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806004836040518082805190602001908083835b602083101515611350578051825260208201915060208101905060208303925061132b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1614156113e857600191506113ed565b600091505b5092915050565b6000806004836040518082805190602001908083835b60208310151561142f578051825260208201915060208101905060208303925061140a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156114b557600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561155d57600080fd5b6004836040518082805190602001908083835b6020831015156115955780518252602082019150602081019050602083039250611570565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160020154141515156115de57600080fd5b8181600301541115156115f057600080fd5b813073ffffffffffffffffffffffffffffffffffffffff16311015151561161657600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561165c573d6000803e3d6000fd5b50611674828260030154611e3990919063ffffffff16565b81600301819055508373ffffffffffffffffffffffffffffffffffffffff167fde3ec9fa1ba846c466aa2d622e31a7040b6ff55cc20ed4c122f6fb6e8cae0c6383856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116fc5780820151818401526020810190506116e1565b50505050905090810190601f1680156117295780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250505050565b60025481565b60008034915060008211151561175857600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506004836040518082805190602001908083835b6020831015156117e957805182526020820191506020810190506020830392506117c4565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905061183582826004015461089f90919063ffffffff16565b816007015411151561184657600080fd5b61185d82826003015461089f90919063ffffffff16565b816003018190555060018160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550611914828260010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089f90919063ffffffff16565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119716001826002015461089f90919063ffffffff16565b816002018190555042816006018190555061199982826004015461089f90919063ffffffff16565b81600401819055506119f334600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b83856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ab6578082015181840152602081019050611a9b565b50505050905090810190601f168015611ae35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2505050565b611b0b3460015461089f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b60015481565b611c01611f29565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c5c57600080fd5b828160600181905250818160a0018181525050806004846040518082805190602001908083835b602083101515611ca85780518252602082019150602081019050602083039250611c83565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190611d15929190611f85565b506080820151816006015560a0820151816007015560c0820151816008015560e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050611d94600160025461089f90919063ffffffff16565b600281905550826040518082805190602001908083835b602083101515611dd05780518252602082019150602081019050602083039250611dab565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f2362915a770d438c034b1e4fdfac17fe8d6353614c7f8275df20db5fb64070b2836040518082815260200191505060405180910390a2505050565b600080838311151515611e4b57600080fd5b82840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e935780548555611ed0565b82800160010185558215611ed057600052602060002091601f016020900482015b82811115611ecf578254825591600101919060010190611eb4565b5b509050611edd9190612005565b5090565b50805460018160011615610100020316600290046000825580601f10611f075750611f26565b601f016020900490600052602060002090810190611f259190612005565b5b50565b6101006040519081016040528060008152602001600081526020016000815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611fc657805160ff1916838001178555611ff4565b82800160010185558215611ff4579182015b82811115611ff3578251825591602001919060010190611fd8565b5b5090506120019190612005565b5090565b61202791905b8082111561202357600081600090555060010161200b565b5090565b905600a165627a7a7230582087074917ef1779b38adae77dc02d0333715714ea0ca4678c010b84bea02faebe0029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146101ee5780631a0f74fc146102195780631b49df65146102965780631e0715df146103135780632bc3d7aa1461037c57806334f5ca6a146103d95780633b36ceae1461045657806358157973146104bf578063634882a2146105465780638356ed8e1461059d57806393ab52bf14610640578063aa130d9a146106dd578063b276345514610770578063b5aebc801461079b578063d0ef19fe146107f7578063dcd4491b14610801578063ee8631801461082c575b6101063460015461089f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156101fa57600080fd5b506102036108c0565b6040518082815260200191505060405180910390f35b34801561022557600080fd5b50610280600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506108df565b6040518082815260200191505060405180910390f35b3480156102a257600080fd5b506102fd600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061095c565b6040518082815260200191505060405180910390f35b34801561031f57600080fd5b5061037a600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506109d9565b005b34801561038857600080fd5b506103bd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d62565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103e557600080fd5b50610440600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610dcf565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b506104bd600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610e5f565b005b3480156104cb57600080fd5b50610530600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506110ec565b6040518082815260200191505060405180910390f35b34801561055257600080fd5b50610587600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061127e565b6040518082815260200191505060405180910390f35b3480156105a957600080fd5b50610624600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611315565b604051808260ff1660ff16815260200191505060405180910390f35b34801561064c57600080fd5b506106c7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506113f4565b6040518082815260200191505060405180910390f35b3480156106e957600080fd5b5061076e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611500565b005b34801561077c57600080fd5b5061078561173d565b6040518082815260200191505060405180910390f35b6107f5600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611743565b005b6107ff611af6565b005b34801561080d57600080fd5b50610816611bf3565b6040518082815260200191505060405180910390f35b34801561083857600080fd5b5061089d600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611bf9565b005b60008082840190508381101515156108b657600080fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000806004836040518082805190602001908083835b60208310151561091a57805182526020820191506020810190506020830392506108f5565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060080154915050919050565b6000806004836040518082805190602001908083835b6020831015156109975780518252602082019150602081019050602083039250610972565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060030154915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a3657600080fd5b6005826040518082805190602001908083835b602083101515610a6e5780518252602082019150602081019050602083039250610a49565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050806004836040518082805190602001908083835b602083101515610adc5780518252602082019150602081019050602083039250610ab7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060028201548160020155600382015481600301556004820154816004015560058201816005019080546001816001161561010002031660029004610b54929190611e5a565b506006820154816006015560078201548160070155600882015481600801556009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610bf3600160025461089f90919063ffffffff16565b6002819055506005826040518082805190602001908083835b602083101515610c315780518252602082019150602081019050602083039250610c0c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000600282016000905560038201600090556004820160009055600582016000610c8e9190611ee1565b6006820160009055600782016000905560088201600090556009820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050816040518082805190602001908083835b602083101515610d055780518252602082019150602081019050602083039250610ce0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c5660405160405180910390a25050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415610dc55760019050610dca565b600090505b919050565b6000806004836040518082805190602001908083835b602083101515610e0a5780518252602082019150602081019050602083039250610de5565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160040154111515610e5257600080fd5b8060040154915050919050565b610e67611f29565b60006004836040518082805190602001908083835b602083101515610ea15780518252602082019150602081019050602083039250610e7c565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206007015414151515610ee557600080fd5b818160600181905250338160e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806005836040518082805190602001908083835b602083101515610f5f5780518252602082019150602081019050602083039250610f3a565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190610fcc929190611f85565b506080820151816006015560a0820151816007015560c0820151816008015560e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398836040518080602001828103825283818151815260200191508051906020019080838360005b838110156110ae578082015181840152602081019050611093565b50505050905090810190601f1680156110db5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114a57600080fd5b6004846040518082805190602001908083835b602083101515611182578051825260208201915060208101905060208303925061115d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506111ce83826007015461089f90919063ffffffff16565b8160070181905550836040518082805190602001908083835b60208310151561120c57805182526020820191506020810190506020830392506111e7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca642846040518082815260200191505060405180910390a2806007015491505092915050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156112ce57600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806004836040518082805190602001908083835b602083101515611350578051825260208201915060208101905060208303925061132b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1614156113e857600191506113ed565b600091505b5092915050565b6000806004836040518082805190602001908083835b60208310151561142f578051825260208201915060208101905060208303925061140a565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156114b557600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561155d57600080fd5b6004836040518082805190602001908083835b6020831015156115955780518252602082019150602081019050602083039250611570565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160020154141515156115de57600080fd5b8181600301541115156115f057600080fd5b813073ffffffffffffffffffffffffffffffffffffffff16311015151561161657600080fd5b8373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561165c573d6000803e3d6000fd5b50611674828260030154611e3990919063ffffffff16565b81600301819055508373ffffffffffffffffffffffffffffffffffffffff167fde3ec9fa1ba846c466aa2d622e31a7040b6ff55cc20ed4c122f6fb6e8cae0c6383856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156116fc5780820151818401526020810190506116e1565b50505050905090810190601f1680156117295780820380516001836020036101000a031916815260200191505b50935050505060405180910390a250505050565b60025481565b60008034915060008211151561175857600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506004836040518082805190602001908083835b6020831015156117e957805182526020820191506020810190506020830392506117c4565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905061183582826004015461089f90919063ffffffff16565b816007015411151561184657600080fd5b61185d82826003015461089f90919063ffffffff16565b816003018190555060018160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550611914828260010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089f90919063ffffffff16565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119716001826002015461089f90919063ffffffff16565b816002018190555042816006018190555061199982826004015461089f90919063ffffffff16565b81600401819055506119f334600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461089f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b83856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611ab6578082015181840152602081019050611a9b565b50505050905090810190601f168015611ae35780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2505050565b611b0b3460015461089f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b60015481565b611c01611f29565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c5c57600080fd5b828160600181905250818160a0018181525050806004846040518082805190602001908083835b602083101515611ca85780518252602082019150602081019050602083039250611c83565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190611d15929190611f85565b506080820151816006015560a0820151816007015560c0820151816008015560e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050611d94600160025461089f90919063ffffffff16565b600281905550826040518082805190602001908083835b602083101515611dd05780518252602082019150602081019050602083039250611dab565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f2362915a770d438c034b1e4fdfac17fe8d6353614c7f8275df20db5fb64070b2836040518082815260200191505060405180910390a2505050565b600080838311151515611e4b57600080fd5b82840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e935780548555611ed0565b82800160010185558215611ed057600052602060002091601f016020900482015b82811115611ecf578254825591600101919060010190611eb4565b5b509050611edd9190612005565b5090565b50805460018160011615610100020316600290046000825580601f10611f075750611f26565b601f016020900490600052602060002090810190611f259190612005565b5b50565b6101006040519081016040528060008152602001600081526020016000815260200160608152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611fc657805160ff1916838001178555611ff4565b82800160010185558215611ff4579182015b82811115611ff3578251825591602001919060010190611fd8565b5b5090506120019190612005565b5090565b61202791905b8082111561202357600081600090555060010161200b565b5090565b905600a165627a7a7230582087074917ef1779b38adae77dc02d0333715714ea0ca4678c010b84bea02faebe0029",
  "sourceMap": "113:1054:2:-;;;667:10:0;659:5;;:18;;;;;;;;;;;;;;;;;;113:1054:2;;;;;;",
  "deployedSourceMap": "113:1054:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:34:0;1906:9;1882:19;;:23;;:34;;;;:::i;:::-;1860:19;:56;;;;1947:1;1926:6;:18;1933:10;1926:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1971:10;1963:42;;;1983:9;1963:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;113:1054:2;3326:92:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3326:92:0;;;;;;;;;;;;;;;;;;;;;;;3531:160;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3531:160:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2757:158:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2757:158:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:273;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1014:273:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:143:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;207:143:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:203:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3014:203:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:359;;8:9:-1;5:2;;;30:1;27;20:12;5:2;551:359:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3051:269:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3051:269:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:159:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:159:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;929:232:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:466:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2524:466:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;202:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;202:26:0;;;;;;;;;;;;;;;;;;;;;;;1372:1030:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:252;;;;;;165:31:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:31:0;;;;;;;;;;;;;;;;;;;;;;;2078:385;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2078:385:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:131:3;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;3326:92:0:-;3368:4;3398;3390:21;;;3383:28;;3326:92;:::o;3531:160::-;3593:4;3606:23;3632:8;3641:4;3632:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3632:14:0;;;;;;;;;;;;;;;;;;;;;3606:40;;3661:7;:23;;;3654:30;;3531:160;;;;:::o;2757:158:1:-;2816:4;2831:23;2857:8;2866:3;2857:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2857:13:1;;;;;;;;;;;;;;;;;;;;;2831:39;;2887:7;:21;;;2880:28;;2757:158;;;;:::o;1014:273::-;1074:23;304:5:0;;;;;;;;;;;290:19;;:10;:19;;;282:28;;;;;;;;1100:9:1;1110:3;1100:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1100:14:1;;;;;;;;;;;;;;;;;;;;;1074:40;;1140:7;1124:8;1133:3;1124:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1124:13:1;;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:21;1193:1;1174:14;;:18;;:21;;;;:::i;:::-;1157:14;:38;;;;1239:9;1249:3;1239:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1239:14:1;;;;;;;;;;;;;;;;;;;;;;1232:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1276:3;1268:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1268:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;1014:273;;:::o;207:143:2:-;258:5;289:1;273:6;:12;280:4;273:12;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;270:76;;;306:1;299:8;;;;270:76;338:1;331:8;;207:143;;;;:::o;3014:203:1:-;3080:4;3093:23;3119:8;3128:3;3119:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3119:13:1;;;;;;;;;;;;;;;;;;;;;3093:39;;3172:1;3148:7;:21;;;:25;3140:34;;;;;;;;3189:7;:21;;;3182:28;;3014:203;;;;:::o;551:359::-;704:29;;:::i;:::-;691:1;665:8;674:3;665:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;665:13:1;;;;;;;;;;;;;;;;;;;;;:22;;;:27;;657:37;;;;;;;;773:3;743:14;:27;;:33;;;;813:10;786:14;:24;;:37;;;;;;;;;;;850:14;833:9;843:3;833:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;833:14:1;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:10;879:24;;;899:3;879:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;879:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:359;;:::o;3051:269:0:-;3124:4;3138:23;304:5;;;;;;;;;;;290:19;;:10;:19;;;282:28;;;;;;;;3164:8;3173:4;3164:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3164:14:0;;;;;;;;;;;;;;;;;;;;;3138:40;;3206:31;3227:9;3206:7;:16;;;:20;;:31;;;;:::i;:::-;3187:7;:16;;:50;;;;3265:4;3251:30;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3251:30:0;;;;;;;;;;;;;;;;;3271:9;3251:30;;;;;;;;;;;;;;;;;;3297:7;:16;;;3290:23;;3051:269;;;;;:::o;419:159:2:-;487:4;534:1;506:18;:24;525:4;506:24;;;;;;;;;;;;;;;;:29;;498:38;;;;;;;;549:18;:24;568:4;549:24;;;;;;;;;;;;;;;;542:31;;419:159;;;:::o;649:221::-;719:5;731:23;757:8;766:3;757:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;757:13:2;;;;;;;;;;;;;;;;;;;;;731:39;;809:1;779:7;:20;;:26;800:4;779:26;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;776:90;;;826:1;819:8;;;;776:90;858:1;851:8;;649:221;;;;;;:::o;929:232::-;1013:4;1024:23;1050:8;1059:3;1050:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1050:13:2;;;;;;;;;;;;;;;;;;;;;1024:39;;1111:1;1077:7;:24;;:30;1102:4;1077:30;;;;;;;;;;;;;;;;:35;;1069:44;;;;;;;;1126:7;:24;;:30;1151:4;1126:30;;;;;;;;;;;;;;;;1119:37;;929:232;;;;;:::o;2524:466:0:-;2603:23;304:5;;;;;;;;;;;290:19;;:10;:19;;;282:28;;;;;;;;2629:8;2638:3;2629:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2629:13:0;;;;;;;;;;;;;;;;;;;;;2603:39;;2688:3;2660:7;:24;;;:31;;2652:40;;;;;;;;2734:6;2710:7;:21;;;:30;2702:39;;;;;;;;2784:6;2767:4;2759:21;;;:31;;2751:40;;;;;;;;2801:2;:11;;:19;2813:6;2801:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2801:19:0;2913:33;2939:6;2913:7;:21;;;:25;;:33;;;;:::i;:::-;2889:7;:21;;:57;;;;2967:2;2961:22;;;2971:6;2979:3;2961:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2961:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:466;;;;:::o;202:26::-;;;;:::o;1372:1030:1:-;1424:11;1518:23;1438:9;1424:23;;1474:1;1465:6;:10;1457:19;;;;;;;;1507:1;1486:6;:18;1493:10;1486:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1544:8;1553:3;1544:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1544:13:1;;;;;;;;;;;;;;;;;;;;;1518:39;;1748:33;1774:6;1748:7;:21;;;:25;;:33;;;;:::i;:::-;1728:7;:16;;;:54;1720:63;;;;;;;;1817:33;1843:6;1817:7;:21;;;:25;;:33;;;;:::i;:::-;1793:7;:21;;:57;;;;1999:1;1964:7;:20;;:32;1985:10;1964:32;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2049:48;2090:6;2049:7;:24;;:36;2074:10;2049:36;;;;;;;;;;;;;;;;:40;;:48;;;;:::i;:::-;2010:7;:24;;:36;2035:10;2010:36;;;;;;;;;;;;;;;:87;;;;2134:31;2163:1;2134:7;:24;;;:28;;:31;;;;:::i;:::-;2107:7;:24;;:58;;;;2190:3;2175:7;:12;;:18;;;;2227:33;2253:6;2227:7;:21;;;:25;;:33;;;;:::i;:::-;2203:7;:21;;:57;;;;2303:45;2338:9;2303:18;:30;2322:10;2303:30;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;2270:18;:30;2289:10;2270:30;;;;;;;;;;;;;;;:78;;;;2371:10;2363:32;;;2383:6;2391:3;2363:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2363:32:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1372:1030;;;:::o;2465:252::-;2536:34;2560:9;2536:19;;:23;;:34;;;;:::i;:::-;2514:19;:56;;;;2655:1;2634:6;:18;2641:10;2634:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2677:10;2669:41;;;2689:9;2669:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2465:252::o;165:31:0:-;;;;:::o;2078:385::-;2163:22;;:::i;:::-;304:5;;;;;;;;;;;290:19;;:10;:19;;;282:28;;;;;;;;2218:13;2195:7;:20;;:36;;;;2301:9;2282:7;:16;;:28;;;;;2346:7;2320:8;2329:13;2320:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2320:23:0;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2380:21;2399:1;2380:14;;:18;;:21;;;;:::i;:::-;2363:14;:38;;;;2431:13;2416:40;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2416:40:0;;;;;;;;;;;;;;;;;2446:9;2416:40;;;;;;;;;;;;;;;;;;2078:385;;;:::o;1079:131:3:-;1137:7;1173:9;1165:1;1160;:6;;1152:15;;;;;;;;1189:1;1185;:5;1173:17;;1204:1;1197:8;;1079:131;;;;;:::o;113:1054:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"./Contributions.sol\";\n\n//@contract to get information about donors/contributors\ncontract Donors is Contributions{\n  //@dev function to check if specific address is a donor\n  function isDonor(address addr) public view returns(uint8){\n    if(donors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev function to check how much specific address has donated\n  function getAddressTotalDonations(address addr) public view returns(uint){\n    require(donorContributions[addr] != 0);\n    return donorContributions[addr];\n  }\n\n  //@dev function to check if address donated to specific missions\n  function isMissionDonor(address addr, string org) public view returns(uint8){\n    Mission storage mission = missions[org];\n    if(mission.contributors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev get donor's contributions to specific mission\n  function getAddressToMissionDonations(address addr, string org) public view returns(uint){\n    Mission storage mission = missions[org];\n    require(mission.addressDonations[addr] != 0);\n    return mission.addressDonations[addr];\n  }\n\n\n\n\n}\n",
  "sourcePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
  "ast": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        694
      ]
    },
    "id": 695,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 591,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 592,
        "nodeType": "ImportDirective",
        "scope": 695,
        "sourceUnit": 590,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 593,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 589,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$589",
                "typeString": "contract Contributions"
              }
            },
            "id": 594,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          290,
          589
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 694,
        "linearizedBaseContracts": [
          694,
          589,
          290
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 602,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 611,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 600,
                        "id": 610,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 612,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 608,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 600,
                        "id": 607,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 614,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 694,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "492:86:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "donorContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "506:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 624,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 623,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "525:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "506:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "506:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        840,
                        841
                      ],
                      "referencedDeclaration": 840,
                      "src": "498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "498:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 629,
                      "name": "donorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 317,
                      "src": "549:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 631,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "568:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "549:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 620,
                  "id": 632,
                  "nodeType": "Return",
                  "src": "542:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 634,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressTotalDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "453:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "452:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "487:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:6:2"
            },
            "scope": 694,
            "src": "419:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "725:145:2",
              "statements": [
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 663,
                      "src": "731:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 643,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 88,
                        "src": "731:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 645,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "757:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$88_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 647,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "766:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "757:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$88_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:39:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 649,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "779:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67,
                        "src": "779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 652,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "779:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "809:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "779:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 660,
                    "nodeType": "Block",
                    "src": "843:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 642,
                        "id": 659,
                        "nodeType": "Return",
                        "src": "851:8:2"
                      }
                    ]
                  },
                  "id": 661,
                  "nodeType": "IfStatement",
                  "src": "776:90:2",
                  "trueBody": {
                    "id": 657,
                    "nodeType": "Block",
                    "src": "811:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 642,
                        "id": 656,
                        "nodeType": "Return",
                        "src": "819:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 663,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "673:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "687:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "719:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:7:2"
            },
            "scope": 694,
            "src": "649:221:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "1018:143:2",
              "statements": [
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "1024:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 672,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 88,
                        "src": "1024:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 677,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 674,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "1050:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$88_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 676,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 675,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "1059:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$88_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 679,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "1077:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "1077:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 682,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 681,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1102:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1077:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1077:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        840,
                        841
                      ],
                      "referencedDeclaration": 840,
                      "src": "1069:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "1126:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 690,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 689,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1151:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 691,
                  "nodeType": "Return",
                  "src": "1119:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 693,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "967:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "981:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "1013:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:6:2"
            },
            "scope": 694,
            "src": "929:232:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 695,
        "src": "113:1054:2"
      }
    ],
    "src": "0:1168:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        694
      ]
    },
    "id": 695,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 591,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 592,
        "nodeType": "ImportDirective",
        "scope": 695,
        "sourceUnit": 590,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 593,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 589,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$589",
                "typeString": "contract Contributions"
              }
            },
            "id": 594,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          290,
          589
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 694,
        "linearizedBaseContracts": [
          694,
          589,
          290
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 602,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 611,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 600,
                        "id": 610,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 612,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 608,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 600,
                        "id": 607,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 614,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 694,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "492:86:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 622,
                            "name": "donorContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "506:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 624,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 623,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "525:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "506:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "506:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        840,
                        841
                      ],
                      "referencedDeclaration": 840,
                      "src": "498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "498:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 629,
                      "name": "donorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 317,
                      "src": "549:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 631,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 630,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 616,
                      "src": "568:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "549:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 620,
                  "id": 632,
                  "nodeType": "Return",
                  "src": "542:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 634,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressTotalDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 616,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "453:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "452:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "487:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:6:2"
            },
            "scope": 694,
            "src": "419:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 662,
              "nodeType": "Block",
              "src": "725:145:2",
              "statements": [
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 663,
                      "src": "731:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 643,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 88,
                        "src": "731:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 645,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "757:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$88_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 647,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 646,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 638,
                      "src": "766:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "757:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$88_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:39:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 649,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 644,
                          "src": "779:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 650,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67,
                        "src": "779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 652,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "779:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "809:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "779:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 660,
                    "nodeType": "Block",
                    "src": "843:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 642,
                        "id": 659,
                        "nodeType": "Return",
                        "src": "851:8:2"
                      }
                    ]
                  },
                  "id": 661,
                  "nodeType": "IfStatement",
                  "src": "776:90:2",
                  "trueBody": {
                    "id": 657,
                    "nodeType": "Block",
                    "src": "811:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 642,
                        "id": 656,
                        "nodeType": "Return",
                        "src": "819:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 663,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "673:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 638,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "687:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 637,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "719:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:7:2"
            },
            "scope": 694,
            "src": "649:221:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 692,
              "nodeType": "Block",
              "src": "1018:143:2",
              "statements": [
                {
                  "assignments": [
                    673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 673,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "1024:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 672,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 88,
                        "src": "1024:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 677,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 674,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "1050:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$88_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 676,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 675,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "1059:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$88_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 679,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "1077:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "1077:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 682,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 681,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "1102:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1077:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1077:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        840,
                        841
                      ],
                      "referencedDeclaration": 840,
                      "src": "1069:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$88_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71,
                      "src": "1126:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 690,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 689,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 665,
                      "src": "1151:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 671,
                  "id": 691,
                  "nodeType": "Return",
                  "src": "1119:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 693,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "967:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "981:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 693,
                  "src": "1013:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:6:2"
            },
            "scope": 694,
            "src": "929:232:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 695,
        "src": "113:1054:2"
      }
    ],
    "src": "0:1168:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-09T07:27:14.421Z"
}