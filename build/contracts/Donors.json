{
  "contractName": "Donors",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "giveBack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        }
      ],
      "name": "donationsToFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "approveRequest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getMissionTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "requestMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getAvailableToGiveMission",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_org",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        }
      ],
      "name": "addFundGoal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "missionCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "genericDonation",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "multipurposeBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_organization",
          "type": "string"
        },
        {
          "name": "_fundGoal",
          "type": "uint256"
        }
      ],
      "name": "createMission",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Request",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "org",
          "type": "string"
        }
      ],
      "name": "Approve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "organization",
          "type": "string"
        }
      ],
      "name": "Given",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        }
      ],
      "name": "CreatedMission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "org",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "fundGoal",
          "type": "uint256"
        }
      ],
      "name": "AddedFundGoal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getAddressTotalDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "isMissionDonor",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "org",
          "type": "string"
        }
      ],
      "name": "getAddressToMissionDonations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612360806100536000396000f3006080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146101ee578063167595ee146102195780631a0f74fc1461028c5780631e0715df146103095780632bc3d7aa1461037257806334f5ca6a146103cf5780633b36ceae1461044c5780635382b5cf146104b55780635815797314610532578063634882a2146105b95780638356ed8e1461061057806393ab52bf146106b3578063b276345514610750578063b5aebc801461077b578063d0ef19fe146107d7578063dcd4491b146107e1578063ee8631801461080c575b6101063460015461087f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156101fa57600080fd5b506102036108a0565b6040518082815260200191505060405180910390f35b34801561022557600080fd5b5061028a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506108bf565b005b34801561029857600080fd5b506102f3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610afe565b6040518082815260200191505060405180910390f35b34801561031557600080fd5b50610370600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b91565b005b34801561037e57600080fd5b506103b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f96565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103db57600080fd5b50610436600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611003565b6040518082815260200191505060405180910390f35b34801561045857600080fd5b506104b3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611093565b005b3480156104c157600080fd5b5061051c600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061135d565b6040518082815260200191505060405180910390f35b34801561053e57600080fd5b506105a3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506113da565b6040518082815260200191505060405180910390f35b3480156105c557600080fd5b506105fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061156c565b6040518082815260200191505060405180910390f35b34801561061c57600080fd5b50610697600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611603565b604051808260ff1660ff16815260200191505060405180910390f35b3480156106bf57600080fd5b5061073a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506116e2565b6040518082815260200191505060405180910390f35b34801561075c57600080fd5b506107656117ee565b6040518082815260200191505060405180910390f35b6107d5600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506117f4565b005b6107df611ba7565b005b3480156107ed57600080fd5b506107f6611ca4565b6040518082815260200191505060405180910390f35b34801561081857600080fd5b5061087d600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611caa565b005b600080828401905083811015151561089657600080fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561091c57600080fd5b6004836040518082805190602001908083835b602083101515610954578051825260208201915060208101905060208303925061092f565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600081600201541415151561099d57600080fd5b8181600301541115156109af57600080fd5b813073ffffffffffffffffffffffffffffffffffffffff1631101515156109d557600080fd5b8060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610a3f573d6000803e3d6000fd5b50610a57828260030154611ff390919063ffffffff16565b8160030181905550826040518082805190602001908083835b602083101515610a955780518252602082019150602081019050602083039250610a70565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207ff39ed54c3a63ca881695c190da1e9572ccc241c340d9f41a22677f1d90bbb43c836040518082815260200191505060405180910390a2505050565b6000806004836040518082805190602001908083835b602083101515610b395780518252602082019150602081019050602083039250610b14565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050610b8981600401548260070154611ff390919063ffffffff16565b915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bee57600080fd5b6005826040518082805190602001908083835b602083101515610c265780518252602082019150602081019050602083039250610c01565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050806004836040518082805190602001908083835b602083101515610c945780518252602082019150602081019050602083039250610c6f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060028201548160020155600382015481600301556004820154816004015560058201816005019080546001816001161561010002031660029004610d0c929190612014565b5060068201548160060155600782015481600701556008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610e08600160025461087f90919063ffffffff16565b6002819055506005826040518082805190602001908083835b602083101515610e465780518252602082019150602081019050602083039250610e21565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000600282016000905560038201600090556004820160009055600582016000610ea3919061209b565b600682016000905560078201600090556008820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050816040518082805190602001908083835b602083101515610f395780518252602082019150602081019050602083039250610f14565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c5660405160405180910390a25050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415610ff95760019050610ffe565b600090505b919050565b6000806004836040518082805190602001908083835b60208310151561103e5780518252602082019150602081019050602083039250611019565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816004015411151561108657600080fd5b8060040154915050919050565b61109b6120e3565b60006004836040518082805190602001908083835b6020831015156110d557805182526020820191506020810190506020830392506110b0565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600701541415151561111957600080fd5b818160600181905250338160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806005836040518082805190602001908083835b602083101515611193578051825260208201915060208101905060208303925061116e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190611200929190612155565b506080820151816006015560a0820151816007015560c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561131f578082015181840152602081019050611304565b50505050905090810190601f16801561134c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b6000806004836040518082805190602001908083835b6020831015156113985780518252602082019150602081019050602083039250611373565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060030154915050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561143857600080fd5b6004846040518082805190602001908083835b602083101515611470578051825260208201915060208101905060208303925061144b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506114bc83826007015461087f90919063ffffffff16565b8160070181905550836040518082805190602001908083835b6020831015156114fa57805182526020820191506020810190506020830392506114d5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca642846040518082815260200191505060405180910390a2806007015491505092915050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156115bc57600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806004836040518082805190602001908083835b60208310151561163e5780518252602082019150602081019050602083039250611619565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1614156116d657600191506116db565b600091505b5092915050565b6000806004836040518082805190602001908083835b60208310151561171d57805182526020820191506020810190506020830392506116f8565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156117a357600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60025481565b60008034915060008211151561180957600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506004836040518082805190602001908083835b60208310151561189a5780518252602082019150602081019050602083039250611875565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506118e682826004015461087f90919063ffffffff16565b81600701541115156118f757600080fd5b61190e82826003015461087f90919063ffffffff16565b816003018190555060018160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506119c5828260010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f90919063ffffffff16565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a226001826002015461087f90919063ffffffff16565b8160020181905550428160060181905550611a4a82826004015461087f90919063ffffffff16565b8160040181905550611aa434600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b83856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b67578082015181840152602081019050611b4c565b50505050905090810190601f168015611b945780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2505050565b611bbc3460015461087f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b60015481565b611cb26120e3565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d0d57600080fd5b828160600181905250818160a0018181525050806004846040518082805190602001908083835b602083101515611d595780518252602082019150602081019050602083039250611d34565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190611dc6929190612155565b506080820151816006015560a0820151816007015560c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050611e82600160025461087f90919063ffffffff16565b60028190555082611e916121d5565b8080602001828103825283818151815260200191508051906020019080838360005b83811015611ece578082015181840152602081019050611eb3565b50505050905090810190601f168015611efb5780820380516001836020036101000a031916815260200191505b5092505050604051809103906000f080158015611f1c573d6000803e3d6000fd5b508160e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050826040518082805190602001908083835b602083101515611f8a5780518252602082019150602081019050602083039250611f65565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f2362915a770d438c034b1e4fdfac17fe8d6353614c7f8275df20db5fb64070b2836040518082815260200191505060405180910390a2505050565b60008083831115151561200557600080fd5b82840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061204d578054855561208a565b8280016001018555821561208a57600052602060002091601f016020900482015b8281111561208957825482559160010191906001019061206e565b5b50905061209791906121e5565b5090565b50805460018160011615610100020316600290046000825580601f106120c157506120e0565b601f0160209004906000526020600020908101906120df91906121e5565b5b50565b61010060405190810160405280600081526020016000815260200160008152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061219657805160ff19168380011785556121c4565b828001600101855582156121c4579182015b828111156121c35782518255916020019190600101906121a8565b5b5090506121d191906121e5565b5090565b60405161012a8061220b83390190565b61220791905b808211156122035760008160009055506001016121eb565b5090565b9056006080604052348015600f57600080fd5b5060405161012a38038061012a8339810180604052810190808051820192919050505080600090805190602001906046929190604c565b505060e7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10608b57805160ff191683800117855560b6565b8280016001018555821560b6579182015b8281111560b5578251825591602001919060010190609c565b5b50905060c1919060c5565b5090565b60e491905b8082111560e057600081600090555060010160ca565b5090565b90565b6035806100f56000396000f3006080604052600080fd00a165627a7a723058208f7ba481978aae9438e4f113b64ebae0e1c02523948f215b0f116f4029394bb10029a165627a7a72305820cdb82f831954dad6dad84e5fff414d8325bb5753e966020a8e3f7122f0ee9eac0029",
  "deployedBytecode": "0x6080604052600436106100f1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806312065fe0146101ee578063167595ee146102195780631a0f74fc1461028c5780631e0715df146103095780632bc3d7aa1461037257806334f5ca6a146103cf5780633b36ceae1461044c5780635382b5cf146104b55780635815797314610532578063634882a2146105b95780638356ed8e1461061057806393ab52bf146106b3578063b276345514610750578063b5aebc801461077b578063d0ef19fe146107d7578063dcd4491b146107e1578063ee8631801461080c575b6101063460015461087f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260088152602001807f66616c6c6261636b0000000000000000000000000000000000000000000000008152506020019250505060405180910390a2005b3480156101fa57600080fd5b506102036108a0565b6040518082815260200191505060405180910390f35b34801561022557600080fd5b5061028a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506108bf565b005b34801561029857600080fd5b506102f3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610afe565b6040518082815260200191505060405180910390f35b34801561031557600080fd5b50610370600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610b91565b005b34801561037e57600080fd5b506103b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f96565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103db57600080fd5b50610436600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611003565b6040518082815260200191505060405180910390f35b34801561045857600080fd5b506104b3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611093565b005b3480156104c157600080fd5b5061051c600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061135d565b6040518082815260200191505060405180910390f35b34801561053e57600080fd5b506105a3600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001909291905050506113da565b6040518082815260200191505060405180910390f35b3480156105c557600080fd5b506105fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061156c565b6040518082815260200191505060405180910390f35b34801561061c57600080fd5b50610697600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611603565b604051808260ff1660ff16815260200191505060405180910390f35b3480156106bf57600080fd5b5061073a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506116e2565b6040518082815260200191505060405180910390f35b34801561075c57600080fd5b506107656117ee565b6040518082815260200191505060405180910390f35b6107d5600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506117f4565b005b6107df611ba7565b005b3480156107ed57600080fd5b506107f6611ca4565b6040518082815260200191505060405180910390f35b34801561081857600080fd5b5061087d600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929080359060200190929190505050611caa565b005b600080828401905083811015151561089657600080fd5b8091505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561091c57600080fd5b6004836040518082805190602001908083835b602083101515610954578051825260208201915060208101905060208303925061092f565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600081600201541415151561099d57600080fd5b8181600301541115156109af57600080fd5b813073ffffffffffffffffffffffffffffffffffffffff1631101515156109d557600080fd5b8060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610a3f573d6000803e3d6000fd5b50610a57828260030154611ff390919063ffffffff16565b8160030181905550826040518082805190602001908083835b602083101515610a955780518252602082019150602081019050602083039250610a70565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207ff39ed54c3a63ca881695c190da1e9572ccc241c340d9f41a22677f1d90bbb43c836040518082815260200191505060405180910390a2505050565b6000806004836040518082805190602001908083835b602083101515610b395780518252602082019150602081019050602083039250610b14565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050610b8981600401548260070154611ff390919063ffffffff16565b915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bee57600080fd5b6005826040518082805190602001908083835b602083101515610c265780518252602082019150602081019050602083039250610c01565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050806004836040518082805190602001908083835b602083101515610c945780518252602082019150602081019050602083039250610c6f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060028201548160020155600382015481600301556004820154816004015560058201816005019080546001816001161561010002031660029004610d0c929190612014565b5060068201548160060155600782015481600701556008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506009820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610e08600160025461087f90919063ffffffff16565b6002819055506005826040518082805190602001908083835b602083101515610e465780518252602082019150602081019050602083039250610e21565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000600282016000905560038201600090556004820160009055600582016000610ea3919061209b565b600682016000905560078201600090556008820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050816040518082805190602001908083835b602083101515610f395780518252602082019150602081019050602083039250610f14565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207fb8693ca6963890ed75ddc33a4bfb4c8c5c5fd5cb6108904d4a14fa40d0961c5660405160405180910390a25050565b60006001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff161415610ff95760019050610ffe565b600090505b919050565b6000806004836040518082805190602001908083835b60208310151561103e5780518252602082019150602081019050602083039250611019565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816004015411151561108657600080fd5b8060040154915050919050565b61109b6120e3565b60006004836040518082805190602001908083835b6020831015156110d557805182526020820191506020810190506020830392506110b0565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600701541415151561111957600080fd5b818160600181905250338160c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050806005836040518082805190602001908083835b602083101515611193578051825260208201915060208101905060208303925061116e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190611200929190612155565b506080820151816006015560a0820151816007015560c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f9e7637d10c6f58bcf03ad632c3c3fcb88d4489674fdce2a7723c260e141ac398836040518080602001828103825283818151815260200191508051906020019080838360005b8381101561131f578082015181840152602081019050611304565b50505050905090810190601f16801561134c5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b6000806004836040518082805190602001908083835b6020831015156113985780518252602082019150602081019050602083039250611373565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090508060030154915050919050565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561143857600080fd5b6004846040518082805190602001908083835b602083101515611470578051825260208201915060208101905060208303925061144b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506114bc83826007015461087f90919063ffffffff16565b8160070181905550836040518082805190602001908083835b6020831015156114fa57805182526020820191506020810190506020830392506114d5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f7111d56781ecdd48151e807951a9dbe25e0bb304cbe9f2a7ae57c19c620ca642846040518082815260200191505060405180910390a2806007015491505092915050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156115bc57600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806004836040518082805190602001908083835b60208310151561163e5780518252602082019150602081019050602083039250611619565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060018160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff1614156116d657600191506116db565b600091505b5092915050565b6000806004836040518082805190602001908083835b60208310151561171d57805182526020820191506020810190506020830392506116f8565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141515156117a357600080fd5b8060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60025481565b60008034915060008211151561180957600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506004836040518082805190602001908083835b60208310151561189a5780518252602082019150602081019050602083039250611875565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506118e682826004015461087f90919063ffffffff16565b81600701541115156118f757600080fd5b61190e82826003015461087f90919063ffffffff16565b816003018190555060018160000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506119c5828260010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f90919063ffffffff16565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a226001826002015461087f90919063ffffffff16565b8160020181905550428160060181905550611a4a82826004015461087f90919063ffffffff16565b8160040181905550611aa434600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461087f90919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b83856040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611b67578082015181840152602081019050611b4c565b50505050905090810190601f168015611b945780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2505050565b611bbc3460015461087f90919063ffffffff16565b6001819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fcf76696fec6613453db3fc8d0e87a2417d6033db7623130bae09a2d82c06813b346040518082815260200180602001828103825260078152602001807f67656e65726963000000000000000000000000000000000000000000000000008152506020019250505060405180910390a2565b60015481565b611cb26120e3565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d0d57600080fd5b828160600181905250818160a0018181525050806004846040518082805190602001908083835b602083101515611d595780518252602082019150602081019050602083039250611d34565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816002015560208201518160030155604082015181600401556060820151816005019080519060200190611dc6929190612155565b506080820151816006015560a0820151816007015560c08201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050611e82600160025461087f90919063ffffffff16565b60028190555082611e916121d5565b8080602001828103825283818151815260200191508051906020019080838360005b83811015611ece578082015181840152602081019050611eb3565b50505050905090810190601f168015611efb5780820380516001836020036101000a031916815260200191505b5092505050604051809103906000f080158015611f1c573d6000803e3d6000fd5b508160e0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050826040518082805190602001908083835b602083101515611f8a5780518252602082019150602081019050602083039250611f65565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f2362915a770d438c034b1e4fdfac17fe8d6353614c7f8275df20db5fb64070b2836040518082815260200191505060405180910390a2505050565b60008083831115151561200557600080fd5b82840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061204d578054855561208a565b8280016001018555821561208a57600052602060002091601f016020900482015b8281111561208957825482559160010191906001019061206e565b5b50905061209791906121e5565b5090565b50805460018160011615610100020316600290046000825580601f106120c157506120e0565b601f0160209004906000526020600020908101906120df91906121e5565b5b50565b61010060405190810160405280600081526020016000815260200160008152602001606081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061219657805160ff19168380011785556121c4565b828001600101855582156121c4579182015b828111156121c35782518255916020019190600101906121a8565b5b5090506121d191906121e5565b5090565b60405161012a8061220b83390190565b61220791905b808211156122035760008160009055506001016121eb565b5090565b9056006080604052348015600f57600080fd5b5060405161012a38038061012a8339810180604052810190808051820192919050505080600090805190602001906046929190604c565b505060e7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10608b57805160ff191683800117855560b6565b8280016001018555821560b6579182015b8281111560b5578251825591602001919060010190609c565b5b50905060c1919060c5565b5090565b60e491905b8082111560e057600081600090555060010160ca565b5090565b90565b6035806100f56000396000f3006080604052600080fd00a165627a7a723058208f7ba481978aae9438e4f113b64ebae0e1c02523948f215b0f116f4029394bb10029a165627a7a72305820cdb82f831954dad6dad84e5fff414d8325bb5753e966020a8e3f7122f0ee9eac0029",
  "sourceMap": "113:1054:2:-;;;683:10:0;675:5;;:18;;;;;;;;;;;;;;;;;;113:1054:2;;;;;;",
  "deployedSourceMap": "113:1054:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:34:0;1910:9;1886:19;;:23;;:34;;;;:::i;:::-;1864:19;:56;;;;1951:1;1930:6;:18;1937:10;1930:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1975:10;1967:42;;;1987:9;1967:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;113:1054:2;3447:92:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3447:92:0;;;;;;;;;;;;;;;;;;;;;;;2670:441;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2670:441:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3708:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3708:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:273:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1014:273:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:143:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;207:143:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3028:203:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3028:203:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:359;;8:9:-1;5:2;;;30:1;27;20:12;5:2;551:359:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2761:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2761:168:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:269:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3172:269:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:159:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:159:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;649:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;929:232:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;230:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:26:0;;;;;;;;;;;;;;;;;;;;;;;1372:1034:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2469:252;;;;;;193:31:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;193:31:0;;;;;;;;;;;;;;;;;;;;;;;2082:488;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2082:488:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:131:4;1331:7;1346:9;1362:1;1358;:5;1346:17;;1382:1;1377;:6;;1369:15;;;;;;;;1398:1;1391:8;;1273:131;;;;;:::o;3447:92:0:-;3489:4;3519;3511:21;;;3504:28;;3447:92;:::o;2670:441::-;2737:23;332:5;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;2763:8;2772:3;2763:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2763:13:0;;;;;;;;;;;;;;;;;;;;;2737:39;;2822:3;2794:7;:24;;;:31;;2786:40;;;;;;;;2870:6;2844:7;:23;;;:32;2836:41;;;;;;;;2920:6;2903:4;2895:21;;;:31;;2887:40;;;;;;;;2937:7;:15;;;;;;;;;;;;:24;;:32;2962:6;2937:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2937:32:0;3036:35;3064:6;3036:7;:23;;;:27;;:35;;;;:::i;:::-;3010:7;:23;;:61;;;;3100:3;3086:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3086:18:0;;;;;;;;;;;;;;;;;3092:6;3086:18;;;;;;;;;;;;;;;;;;2670:441;;;:::o;3708:182::-;3770:4;3783:23;3809:8;3818:4;3809:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3809:14:0;;;;;;;;;;;;;;;;;;;;;3783:40;;3839:43;3860:7;:21;;;3839:7;:16;;;:20;;:43;;;;:::i;:::-;3831:52;;3708:182;;;;:::o;1014:273:1:-;1074:23;332:5:0;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;1100:9:1;1110:3;1100:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1100:14:1;;;;;;;;;;;;;;;;;;;;;1074:40;;1140:7;1124:8;1133:3;1124:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1124:13:1;;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:21;1193:1;1174:14;;:18;;:21;;;;:::i;:::-;1157:14;:38;;;;1239:9;1249:3;1239:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1239:14:1;;;;;;;;;;;;;;;;;;;;;;1232:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1276:3;1268:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1268:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;1014:273;;:::o;207:143:2:-;258:5;289:1;273:6;:12;280:4;273:12;;;;;;;;;;;;;;;;;;;;;;;;;:17;;;270:76;;;306:1;299:8;;;;270:76;338:1;331:8;;207:143;;;;:::o;3028:203:1:-;3094:4;3107:23;3133:8;3142:3;3133:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3133:13:1;;;;;;;;;;;;;;;;;;;;;3107:39;;3186:1;3162:7;:21;;;:25;3154:34;;;;;;;;3203:7;:21;;;3196:28;;3028:203;;;;:::o;551:359::-;704:29;;:::i;:::-;691:1;665:8;674:3;665:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;665:13:1;;;;;;;;;;;;;;;;;;;;;:22;;;:27;;657:37;;;;;;;;773:3;743:14;:27;;:33;;;;813:10;786:14;:24;;:37;;;;;;;;;;;850:14;833:9;843:3;833:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;833:14:1;;;;;;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;887:10;879:24;;;899:3;879:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;879:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:359;;:::o;2761:168::-;2828:4;2843:23;2869:8;2878:3;2869:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2869:13:1;;;;;;;;;;;;;;;;;;;;;2843:39;;2899:7;:23;;;2892:30;;2761:168;;;;:::o;3172:269:0:-;3245:4;3259:23;332:5;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;3285:8;3294:4;3285:14;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3285:14:0;;;;;;;;;;;;;;;;;;;;;3259:40;;3327:31;3348:9;3327:7;:16;;;:20;;:31;;;;:::i;:::-;3308:7;:16;;:50;;;;3386:4;3372:30;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3372:30:0;;;;;;;;;;;;;;;;;3392:9;3372:30;;;;;;;;;;;;;;;;;;3418:7;:16;;;3411:23;;3172:269;;;;;:::o;419:159:2:-;487:4;534:1;506:18;:24;525:4;506:24;;;;;;;;;;;;;;;;:29;;498:38;;;;;;;;549:18;:24;568:4;549:24;;;;;;;;;;;;;;;;542:31;;419:159;;;:::o;649:221::-;719:5;731:23;757:8;766:3;757:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;757:13:2;;;;;;;;;;;;;;;;;;;;;731:39;;809:1;779:7;:20;;:26;800:4;779:26;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;776:90;;;826:1;819:8;;;;776:90;858:1;851:8;;649:221;;;;;;:::o;929:232::-;1013:4;1024:23;1050:8;1059:3;1050:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1050:13:2;;;;;;;;;;;;;;;;;;;;;1024:39;;1111:1;1077:7;:24;;:30;1102:4;1077:30;;;;;;;;;;;;;;;;:35;;1069:44;;;;;;;;1126:7;:24;;:30;1151:4;1126:30;;;;;;;;;;;;;;;;1119:37;;929:232;;;;;:::o;230:26:0:-;;;;:::o;1372:1034:1:-;1424:11;1518:23;1438:9;1424:23;;1474:1;1465:6;:10;1457:19;;;;;;;;1507:1;1486:6;:18;1493:10;1486:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1544:8;1553:3;1544:13;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1544:13:1;;;;;;;;;;;;;;;;;;;;;1518:39;;1748:33;1774:6;1748:7;:21;;;:25;;:33;;;;:::i;:::-;1728:7;:16;;;:54;1720:63;;;;;;;;1819:35;1847:6;1819:7;:23;;;:27;;:35;;;;:::i;:::-;1793:7;:23;;:61;;;;2003:1;1968:7;:20;;:32;1989:10;1968:32;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2053:48;2094:6;2053:7;:24;;:36;2078:10;2053:36;;;;;;;;;;;;;;;;:40;;:48;;;;:::i;:::-;2014:7;:24;;:36;2039:10;2014:36;;;;;;;;;;;;;;;:87;;;;2138:31;2167:1;2138:7;:24;;;:28;;:31;;;;:::i;:::-;2111:7;:24;;:58;;;;2194:3;2179:7;:12;;:18;;;;2231:33;2257:6;2231:7;:21;;;:25;;:33;;;;:::i;:::-;2207:7;:21;;:57;;;;2307:45;2342:9;2307:18;:30;2326:10;2307:30;;;;;;;;;;;;;;;;:34;;:45;;;;:::i;:::-;2274:18;:30;2293:10;2274:30;;;;;;;;;;;;;;;:78;;;;2375:10;2367:32;;;2387:6;2395:3;2367:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2367:32:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1372:1034;;;:::o;2469:252::-;2540:34;2564:9;2540:19;;:23;;:34;;;;:::i;:::-;2518:19;:56;;;;2659:1;2638:6;:18;2645:10;2638:18;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;2681:10;2673:41;;;2693:9;2673:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2469:252::o;193:31:0:-;;;;:::o;2082:488::-;2167:22;;:::i;:::-;332:5;;;;;;;;;;;318:19;;:10;:19;;;310:28;;;;;;;;2222:13;2199:7;:20;;:36;;;;2305:9;2286:7;:16;;:28;;;;;2350:7;2324:8;2333:13;2324:23;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2324:23:0;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2384:21;2403:1;2384:14;;:18;;:21;;;;:::i;:::-;2367:14;:38;;;;2493:13;2477:30;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2477:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2477:30:0;2459:7;:15;;:48;;;;;;;;;;;2538:13;2523:40;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2523:40:0;;;;;;;;;;;;;;;;;2553:9;2523:40;;;;;;;;;;;;;;;;;;2082:488;;;:::o;1079:131:4:-;1137:7;1173:9;1165:1;1160;:6;;1152:15;;;;;;;;1189:1;1185;:5;1173:17;;1204:1;1197:8;;1079:131;;;;;:::o;113:1054:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"./Contributions.sol\";\n\n//@contract to get information about donors/contributors\ncontract Donors is Contributions{\n  //@dev function to check if specific address is a donor\n  function isDonor(address addr) public view returns(uint8){\n    if(donors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev function to check how much specific address has donated\n  function getAddressTotalDonations(address addr) public view returns(uint){\n    require(donorContributions[addr] != 0);\n    return donorContributions[addr];\n  }\n\n  //@dev function to check if address donated to specific missions\n  function isMissionDonor(address addr, string org) public view returns(uint8){\n    Mission storage mission = missions[org];\n    if(mission.contributors[addr] == 1){\n      return 1;\n    }\n    else{\n      return 0;\n    }\n  }\n\n  //@dev get donor's contributions to specific mission\n  function getAddressToMissionDonations(address addr, string org) public view returns(uint){\n    Mission storage mission = missions[org];\n    require(mission.addressDonations[addr] != 0);\n    return mission.addressDonations[addr];\n  }\n\n\n\n\n}\n",
  "sourcePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
  "ast": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        706
      ]
    },
    "id": 707,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 603,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 604,
        "nodeType": "ImportDirective",
        "scope": 707,
        "sourceUnit": 602,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 605,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 601,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$601",
                "typeString": "contract Contributions"
              }
            },
            "id": 606,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          302,
          601
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 706,
        "linearizedBaseContracts": [
          706,
          601,
          302
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 615,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 612,
                        "id": 622,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 624,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 620,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 612,
                        "id": 619,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 626,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 706,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "492:86:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 634,
                            "name": "donorContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "506:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 636,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 635,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "525:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "506:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "506:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        871,
                        872
                      ],
                      "referencedDeclaration": 871,
                      "src": "498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "498:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 641,
                      "name": "donorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "549:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 643,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 642,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "568:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "549:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "542:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 646,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressTotalDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "453:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "452:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "487:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:6:2"
            },
            "scope": 706,
            "src": "419:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 674,
              "nodeType": "Block",
              "src": "725:145:2",
              "statements": [
                {
                  "assignments": [
                    656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 656,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "731:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 655,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 87,
                        "src": "731:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 657,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "757:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$87_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 659,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 658,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "766:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "757:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$87_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:39:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 661,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "779:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66,
                        "src": "779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "779:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "809:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "779:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 672,
                    "nodeType": "Block",
                    "src": "843:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 654,
                        "id": 671,
                        "nodeType": "Return",
                        "src": "851:8:2"
                      }
                    ]
                  },
                  "id": 673,
                  "nodeType": "IfStatement",
                  "src": "776:90:2",
                  "trueBody": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "811:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 654,
                        "id": 668,
                        "nodeType": "Return",
                        "src": "819:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 675,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "673:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "687:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "719:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:7:2"
            },
            "scope": 706,
            "src": "649:221:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "1018:143:2",
              "statements": [
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 705,
                      "src": "1024:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 684,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 87,
                        "src": "1024:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 689,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 686,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1050:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$87_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 688,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 687,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "1059:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$87_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "1077:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "1077:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 694,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "1102:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1077:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1077:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        871,
                        872
                      ],
                      "referencedDeclaration": 871,
                      "src": "1069:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "1126:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 702,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 701,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "1151:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 683,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "1119:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 705,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "967:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "981:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "1013:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:6:2"
            },
            "scope": 706,
            "src": "929:232:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 707,
        "src": "113:1054:2"
      }
    ],
    "src": "0:1168:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Donors.sol",
    "exportedSymbols": {
      "Donors": [
        706
      ]
    },
    "id": 707,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 603,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/hazemtabbaa/Desktop/Other/give-back/contracts/Contributions.sol",
        "file": "./Contributions.sol",
        "id": 604,
        "nodeType": "ImportDirective",
        "scope": 707,
        "sourceUnit": 602,
        "src": "25:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 605,
              "name": "Contributions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 601,
              "src": "132:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contributions_$601",
                "typeString": "contract Contributions"
              }
            },
            "id": 606,
            "nodeType": "InheritanceSpecifier",
            "src": "132:13:2"
          }
        ],
        "contractDependencies": [
          302,
          601
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 706,
        "linearizedBaseContracts": [
          706,
          601,
          302
        ],
        "name": "Donors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "264:86:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 613,
                        "name": "donors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 615,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "280:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "273:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "289:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "273:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "323:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "338:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 612,
                        "id": 622,
                        "nodeType": "Return",
                        "src": "331:8:2"
                      }
                    ]
                  },
                  "id": 624,
                  "nodeType": "IfStatement",
                  "src": "270:76:2",
                  "trueBody": {
                    "id": 620,
                    "nodeType": "Block",
                    "src": "291:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "306:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 612,
                        "id": 619,
                        "nodeType": "Return",
                        "src": "299:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 626,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "224:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "223:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "258:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "257:7:2"
            },
            "scope": 706,
            "src": "207:143:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "492:86:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 634,
                            "name": "donorContributions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "506:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 636,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 635,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "525:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "506:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "534:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "506:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 633,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        871,
                        872
                      ],
                      "referencedDeclaration": 871,
                      "src": "498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "498:38:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 641,
                      "name": "donorContributions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 329,
                      "src": "549:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 643,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 642,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "568:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "549:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 644,
                  "nodeType": "Return",
                  "src": "542:31:2"
                }
              ]
            },
            "documentation": null,
            "id": 646,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressTotalDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "453:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "452:14:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 646,
                  "src": "487:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 630,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:6:2"
            },
            "scope": 706,
            "src": "419:159:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 674,
              "nodeType": "Block",
              "src": "725:145:2",
              "statements": [
                {
                  "assignments": [
                    656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 656,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "731:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 655,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 87,
                        "src": "731:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 657,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "757:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$87_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 659,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 658,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 650,
                      "src": "766:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "757:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$87_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "731:39:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 661,
                          "name": "mission",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "779:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                            "typeString": "struct Charity.Mission storage pointer"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "contributors",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66,
                        "src": "779:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 664,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 648,
                        "src": "800:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "779:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "809:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "779:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 672,
                    "nodeType": "Block",
                    "src": "843:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 654,
                        "id": 671,
                        "nodeType": "Return",
                        "src": "851:8:2"
                      }
                    ]
                  },
                  "id": 673,
                  "nodeType": "IfStatement",
                  "src": "776:90:2",
                  "trueBody": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "811:23:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "826:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 654,
                        "id": 668,
                        "nodeType": "Return",
                        "src": "819:8:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 675,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isMissionDonor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "673:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "687:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "672:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 675,
                  "src": "719:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:7:2"
            },
            "scope": 706,
            "src": "649:221:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "1018:143:2",
              "statements": [
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "name": "mission",
                      "nodeType": "VariableDeclaration",
                      "scope": 705,
                      "src": "1024:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                        "typeString": "struct Charity.Mission"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 684,
                        "name": "Mission",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 87,
                        "src": "1024:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                          "typeString": "struct Charity.Mission"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 689,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 686,
                      "name": "missions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "1050:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Mission_$87_storage_$",
                        "typeString": "mapping(string memory => struct Charity.Mission storage ref)"
                      }
                    },
                    "id": 688,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 687,
                      "name": "org",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "1059:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1050:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Mission_$87_storage",
                      "typeString": "struct Charity.Mission storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 691,
                              "name": "mission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "1077:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                                "typeString": "struct Charity.Mission storage pointer"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addressDonations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "1077:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 694,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 693,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "1102:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1077:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1111:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1077:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        871,
                        872
                      ],
                      "referencedDeclaration": 871,
                      "src": "1069:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 698,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:44:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "mission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Mission_$87_storage_ptr",
                          "typeString": "struct Charity.Mission storage pointer"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addressDonations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "1126:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 702,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 701,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "1151:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1126:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 683,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "1119:37:2"
                }
              ]
            },
            "documentation": null,
            "id": 705,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getAddressToMissionDonations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "967:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "name": "org",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "981:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "981:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:26:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "1013:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1012:6:2"
            },
            "scope": 706,
            "src": "929:232:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 707,
        "src": "113:1054:2"
      }
    ],
    "src": "0:1168:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-13T23:34:11.191Z"
}